__NUXT_JSONP__("/posts/android_navigation_view", {data:[{title:"AndroidのNavigationViewって便利じゃねって話。下から出てくるメニューの作り方",created_at:"2020-07-01T00:00:00.000Z",tags:["Android","Kotlin","MaterialDesign"],bodyContent:"今まで`TextView`並べてたのがｂｋみたいだわ  \r\nそんなことより7月ですね。\r\n\r\n# 本題\r\nこういうのを作ります。  \r\n\r\n![Imgur](https:\u002F\u002Fimgur.com\u002Fu1b56Rr.png)\r\n\r\n# 環境\r\n| なまえ  | あたい                            |\r\n|---------|-----------------------------------|\r\n| Android | 11 Beta 1 (5以降なら動くはずです) |\r\n| 言語    | Kotlin                            |\r\n\r\n# マテリアルデザインのライブラリを入れる\r\n\r\n`appフォルダ`の方にある`build.gradle`を開きます。  \r\n開いたら、`dependencies`に追記します。\r\n\r\n```gradle\r\ndependencies {\r\n    \u002F\u002F Material Design\r\n    implementation 'com.google.android.material:material:1.3.0-alpha01'\r\n    \u002F\u002F 省略\r\n}\r\n```\r\n\r\nあと多分関係ないけど、Java 8を使うようにしておくと今後幸せになれるかもしれない。\r\n\r\n```gradle\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"30.0.0\"\r\n    \u002F\u002F 省略\r\n    compileOptions {\r\n        sourceCompatibility = 1.8\r\n        targetCompatibility = 1.8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"1.8\"\r\n    }\r\n}\r\n```\r\n\r\n# styles.xml を書き換える\r\nこれしないと **メニューを押したときの背景** がちゃんと反映されないと思います。  \r\nといっても`parent`を`Theme.MaterialComponents.Light.DarkActionBar`に変更するだけです。難しくない\r\n\r\n```xml\r\n\u003Cresources\u003E\r\n    \u003C!-- Base application theme. --\u003E\r\n    \u003Cstyle name=\"AppTheme\" parent=\"Theme.MaterialComponents.Light.DarkActionBar\"\u003E\r\n        \u003C!-- Customize your theme here. --\u003E\r\n        \u003Citem name=\"colorPrimary\"\u003E@color\u002FcolorPrimary\u003C\u002Fitem\u003E\r\n        \u003Citem name=\"colorPrimaryDark\"\u003E@color\u002FcolorPrimaryDark\u003C\u002Fitem\u003E\r\n        \u003Citem name=\"colorAccent\"\u003E@color\u002FcolorAccent\u003C\u002Fitem\u003E\r\n    \u003C\u002Fstyle\u003E\r\n\r\n\u003C\u002Fresources\u003E\r\n```\r\n\r\n# メニュー作成\r\n## menuフォルダの中にファイルを置く\r\n\r\n`res`の中に`menu`フォルダを作ります。  \r\nできたら、`bottom_fragment_menu.xml`ファイルを置きます。\r\n\r\n## アイコンを取ってくる\r\nAndroid Studio 4.0 からアイコンを選ぶ際に、Outlinedなアイコンが選択可能になりました。たすかる  \r\n`Vector Asset`を開いて、好きなアイコンを取ってきてください。  \r\n起動方法は、`Shiftキーを3連続`押して`Vector Asset`って入力すれば多分出ると思います。`macOSのSpotlight的ななにか（macOS触ったこと無いけど）`\r\n\r\n![Imgur](https:\u002F\u002Fimgur.com\u002FEIxL4JP.png)\r\n\r\n## bottom_fragment_menu.xml を書く\r\n以下のように。  \r\n\r\n```xml\r\n\u003C?xml version=\"1.0\" encoding=\"utf-8\"?\u003E\r\n\u003Cmenu xmlns:android=\"http:\u002F\u002Fschemas.android.com\u002Fapk\u002Fres\u002Fandroid\"\u003E\r\n    \u003Cgroup android:checkableBehavior=\"single\"\u003E\r\n        \u003Citem\r\n            android:id=\"@+id\u002Fnav_menu_java\"\r\n            android:icon=\"@drawable\u002Fic_outline_settings_24\"\r\n            android:title=\"Java\" \u002F\u003E\r\n        \u003Citem\r\n            android:id=\"@+id\u002Fnav_menu_kotlin\"\r\n            android:icon=\"@drawable\u002Fic_outline_settings_24\"\r\n            android:title=\"Kotlin\" \u002F\u003E\r\n        \u003Citem\r\n            android:id=\"@+id\u002Fnav_menu_js\"\r\n            android:icon=\"@drawable\u002Fic_outline_settings_24\"\r\n            android:title=\"JS\" \u002F\u003E\r\n    \u003C\u002Fgroup\u003E\r\n\u003C\u002Fmenu\u003E\r\n```\r\n\r\n# MainActivity\r\n## activity_main.xml\r\nレイアウトを書き換えます。ボタン一個置くだけなので`ConstraintLayout`をそのまま使おうと思います。  \r\nいつかはちゃんと`ConstraintLayout`できるようにして**MotionLayoutの初め方**みたいな記事を書きたい。  \r\nちなみに現状`MotionLayout`使うと`RecyclerView`のクリックが行かない（たまによくクリックが反応しなくなる）のでもう少し様子見したほうが良い。\r\n```xml\r\n\u003C?xml version=\"1.0\" encoding=\"utf-8\"?\u003E\r\n\u003Candroidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http:\u002F\u002Fschemas.android.com\u002Fapk\u002Fres\u002Fandroid\"\r\n    xmlns:app=\"http:\u002F\u002Fschemas.android.com\u002Fapk\u002Fres-auto\"\r\n    xmlns:tools=\"http:\u002F\u002Fschemas.android.com\u002Ftools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".MainActivity\"\u003E\r\n\r\n    \u003CButton\r\n        android:id=\"@+id\u002Factivity_main_bottom_menu\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"BottomMenu\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" \u002F\u003E\r\n\r\n\u003C\u002Fandroidx.constraintlayout.widget.ConstraintLayout\u003E\r\n```\r\n\r\n## MainActivity.kt\r\nメニューを開くコードを書きます。\r\n\r\n```kotlin\r\nclass MainActivity : AppCompatActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_main)\r\n        \u002F\u002F BottomFragment開く\r\n        activity_main_bottom_menu.setOnClickListener {\r\n            MenuBottomFragment().show(supportFragmentManager, \"menu\")\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n`MenuBottomFragment`が赤くなるのでこれから書いていきましょう。\r\n\r\n# MenuBottomFragment.kt\r\nを作成します。  \r\nよくわからん人は`MainActivity.kt`のある場所に`MenuBottomFragment.kt`を作ればいいです。\r\n\r\n## bottom_fragment_menu.xml\r\n`res\u002Flayout`の中に`bottom_fragment_menu.xml`を作成してください。  \r\n中身はこんな感じで\r\n\r\n```xml\r\n\u003C?xml version=\"1.0\" encoding=\"utf-8\"?\u003E\r\n\u003CLinearLayout xmlns:android=\"http:\u002F\u002Fschemas.android.com\u002Fapk\u002Fres\u002Fandroid\"\r\n    xmlns:app=\"http:\u002F\u002Fschemas.android.com\u002Fapk\u002Fres-auto\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\u003E\r\n\r\n    \u003Ccom.google.android.material.navigation.NavigationView\r\n        android:id=\"@+id\u002Fbottom_fragment_menu_navigation_view\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        app:menu=\"@menu\u002Fbottom_fragment_menu\" \u002F\u003E\r\n\r\n\u003C\u002FLinearLayout\u003E\r\n```\r\n\r\n## MenuBottomFragment.kt\r\n\r\n今回はメニューを押したらToastを出すようにしてみました。\r\n\r\n```kotlin\r\nclass MenuBottomFragment : BottomSheetDialogFragment() {\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        return inflater.inflate(R.layout.bottom_fragment_menu, container, false)\r\n    }\r\n\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n        super.onViewCreated(view, savedInstanceState)\r\n        \u002F\u002F メニュー押したとき\r\n        bottom_fragment_menu_navigation_view.setNavigationItemSelectedListener {\r\n            Toast.makeText(context, it.title, Toast.LENGTH_SHORT).show()\r\n            true\r\n        }\r\n    }\r\n\r\n}\r\n```\r\n\r\nこれで終わりです。おつ88888888888\r\n\r\nあとは起動してボタンを押すと下からメニューが出てくると思います。\r\n\r\n# ソースコード\r\nhttps:\u002F\u002Fgithub.com\u002Ftakusan23\u002FNavigationViewSample\r\n\r\n# おわりに\r\nAndroid Studioくんに背景画像セットしてるせいでスクショが取れなかった。  \r\n次からはPreview版をブログ書く用に入れておきたいと思いましたまる",bodyHtml:"\u003Cp\u003E今まで\u003Ccode\u003ETextView\u003C\u002Fcode\u003E並べてたのがｂｋみたいだわ\u003Cbr\u003E\nそんなことより7月ですね。\u003C\u002Fp\u003E\n\u003Ch1\u003E本題\u003C\u002Fh1\u003E\n\u003Cp\u003Eこういうのを作ります。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fimgur.com\u002Fu1b56Rr.png\" alt=\"Imgur\"\u003E\u003C\u002Fp\u003E\n\u003Ch1\u003E環境\u003C\u002Fh1\u003E\n\u003Ctable\u003E\n\u003Cthead\u003E\n\u003Ctr\u003E\n\u003Cth\u003Eなまえ\u003C\u002Fth\u003E\n\u003Cth\u003Eあたい\u003C\u002Fth\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Fthead\u003E\n\u003Ctbody\u003E\n\u003Ctr\u003E\n\u003Ctd\u003EAndroid\u003C\u002Ftd\u003E\n\u003Ctd\u003E11 Beta 1 (5以降なら動くはずです)\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E言語\u003C\u002Ftd\u003E\n\u003Ctd\u003EKotlin\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftbody\u003E\n\u003C\u002Ftable\u003E\n\u003Ch1\u003Eマテリアルデザインのライブラリを入れる\u003C\u002Fh1\u003E\n\u003Cp\u003E\u003Ccode\u003Eappフォルダ\u003C\u002Fcode\u003Eの方にある\u003Ccode\u003Ebuild.gradle\u003C\u002Fcode\u003Eを開きます。\u003Cbr\u003E\n開いたら、\u003Ccode\u003Edependencies\u003C\u002Fcode\u003Eに追記します。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Edependencies\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Material Design\u003C\u002Fspan\u003E\n    implementation \u003Cspan class=\"hljs-string\"\u003E'com.google.android.material:material:1.3.0-alpha01'\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 省略\u003C\u002Fspan\u003E\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003Eあと多分関係ないけど、Java 8を使うようにしておくと今後幸せになれるかもしれない。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003Eandroid {\n    compileSdkVersion \u003Cspan class=\"hljs-number\"\u003E30\u003C\u002Fspan\u003E\n    buildToolsVersion \u003Cspan class=\"hljs-string\"\u003E\"30.0.0\"\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 省略\u003C\u002Fspan\u003E\n    compileOptions {\n        \u003Cspan class=\"hljs-keyword\"\u003EsourceCompatibility\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-number\"\u003E1.8\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-keyword\"\u003EtargetCompatibility\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-number\"\u003E1.8\u003C\u002Fspan\u003E\n    }\n    kotlinOptions {\n        jvmTarget = \u003Cspan class=\"hljs-string\"\u003E\"1.8\"\u003C\u002Fspan\u003E\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch1\u003Estyles.xml を書き換える\u003C\u002Fh1\u003E\n\u003Cp\u003Eこれしないと \u003Cstrong\u003Eメニューを押したときの背景\u003C\u002Fstrong\u003E がちゃんと反映されないと思います。\u003Cbr\u003E\nといっても\u003Ccode\u003Eparent\u003C\u002Fcode\u003Eを\u003Ccode\u003ETheme.MaterialComponents.Light.DarkActionBar\u003C\u002Fcode\u003Eに変更するだけです。難しくない\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eresources\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-comment\"\u003E&lt;!-- Base application theme. --&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Estyle\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"AppTheme\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eparent\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"Theme.MaterialComponents.Light.DarkActionBar\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"xml\"\u003E\n        \u003Cspan class=\"hljs-comment\"\u003E&lt;!-- Customize your theme here. --&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eitem\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"colorPrimary\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E@color\u002FcolorPrimary\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eitem\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eitem\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"colorPrimaryDark\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E@color\u002FcolorPrimaryDark\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eitem\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eitem\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"colorAccent\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E@color\u002FcolorAccent\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eitem\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Estyle\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eresources\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch1\u003Eメニュー作成\u003C\u002Fh1\u003E\n\u003Ch2\u003Emenuフォルダの中にファイルを置く\u003C\u002Fh2\u003E\n\u003Cp\u003E\u003Ccode\u003Eres\u003C\u002Fcode\u003Eの中に\u003Ccode\u003Emenu\u003C\u002Fcode\u003Eフォルダを作ります。\u003Cbr\u003E\nできたら、\u003Ccode\u003Ebottom_fragment_menu.xml\u003C\u002Fcode\u003Eファイルを置きます。\u003C\u002Fp\u003E\n\u003Ch2\u003Eアイコンを取ってくる\u003C\u002Fh2\u003E\n\u003Cp\u003EAndroid Studio 4.0 からアイコンを選ぶ際に、Outlinedなアイコンが選択可能になりました。たすかる\u003Cbr\u003E\n\u003Ccode\u003EVector Asset\u003C\u002Fcode\u003Eを開いて、好きなアイコンを取ってきてください。\u003Cbr\u003E\n起動方法は、\u003Ccode\u003EShiftキーを3連続\u003C\u002Fcode\u003E押して\u003Ccode\u003EVector Asset\u003C\u002Fcode\u003Eって入力すれば多分出ると思います。\u003Ccode\u003EmacOSのSpotlight的ななにか（macOS触ったこと無いけど）\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fimgur.com\u002FEIxL4JP.png\" alt=\"Imgur\"\u003E\u003C\u002Fp\u003E\n\u003Ch2\u003Ebottom_fragment_menu.xml を書く\u003C\u002Fh2\u003E\n\u003Cp\u003E以下のように。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-meta\"\u003E&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Emenu\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Exmlns:android\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"http:\u002F\u002Fschemas.android.com\u002Fapk\u002Fres\u002Fandroid\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Egroup\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eandroid:checkableBehavior\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"single\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eitem\u003C\u002Fspan\u003E\n            \u003Cspan class=\"hljs-attr\"\u003Eandroid:id\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"@+id\u002Fnav_menu_java\"\u003C\u002Fspan\u003E\n            \u003Cspan class=\"hljs-attr\"\u003Eandroid:icon\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"@drawable\u002Fic_outline_settings_24\"\u003C\u002Fspan\u003E\n            \u003Cspan class=\"hljs-attr\"\u003Eandroid:title\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"Java\"\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eitem\u003C\u002Fspan\u003E\n            \u003Cspan class=\"hljs-attr\"\u003Eandroid:id\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"@+id\u002Fnav_menu_kotlin\"\u003C\u002Fspan\u003E\n            \u003Cspan class=\"hljs-attr\"\u003Eandroid:icon\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"@drawable\u002Fic_outline_settings_24\"\u003C\u002Fspan\u003E\n            \u003Cspan class=\"hljs-attr\"\u003Eandroid:title\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"Kotlin\"\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eitem\u003C\u002Fspan\u003E\n            \u003Cspan class=\"hljs-attr\"\u003Eandroid:id\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"@+id\u002Fnav_menu_js\"\u003C\u002Fspan\u003E\n            \u003Cspan class=\"hljs-attr\"\u003Eandroid:icon\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"@drawable\u002Fic_outline_settings_24\"\u003C\u002Fspan\u003E\n            \u003Cspan class=\"hljs-attr\"\u003Eandroid:title\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"JS\"\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Egroup\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Emenu\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch1\u003EMainActivity\u003C\u002Fh1\u003E\n\u003Ch2\u003Eactivity_main.xml\u003C\u002Fh2\u003E\n\u003Cp\u003Eレイアウトを書き換えます。ボタン一個置くだけなので\u003Ccode\u003EConstraintLayout\u003C\u002Fcode\u003Eをそのまま使おうと思います。\u003Cbr\u003E\nいつかはちゃんと\u003Ccode\u003EConstraintLayout\u003C\u002Fcode\u003Eできるようにして\u003Cstrong\u003EMotionLayoutの初め方\u003C\u002Fstrong\u003Eみたいな記事を書きたい。\u003Cbr\u003E\nちなみに現状\u003Ccode\u003EMotionLayout\u003C\u002Fcode\u003E使うと\u003Ccode\u003ERecyclerView\u003C\u002Fcode\u003Eのクリックが行かない（たまによくクリックが反応しなくなる）のでもう少し様子見したほうが良い。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-meta\"\u003E&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eandroidx.constraintlayout.widget.ConstraintLayout\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Exmlns:android\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"http:\u002F\u002Fschemas.android.com\u002Fapk\u002Fres\u002Fandroid\"\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Exmlns:app\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"http:\u002F\u002Fschemas.android.com\u002Fapk\u002Fres-auto\"\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Exmlns:tools\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"http:\u002F\u002Fschemas.android.com\u002Ftools\"\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Eandroid:layout_width\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"match_parent\"\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Eandroid:layout_height\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"match_parent\"\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Etools:context\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\".MainActivity\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003EButton\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-attr\"\u003Eandroid:id\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"@+id\u002Factivity_main_bottom_menu\"\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-attr\"\u003Eandroid:layout_width\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"wrap_content\"\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-attr\"\u003Eandroid:layout_height\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"wrap_content\"\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-attr\"\u003Eandroid:text\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"BottomMenu\"\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-attr\"\u003Eapp:layout_constraintBottom_toBottomOf\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"parent\"\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-attr\"\u003Eapp:layout_constraintLeft_toLeftOf\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"parent\"\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-attr\"\u003Eapp:layout_constraintRight_toRightOf\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"parent\"\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-attr\"\u003Eapp:layout_constraintTop_toTopOf\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"parent\"\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eandroidx.constraintlayout.widget.ConstraintLayout\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2\u003EMainActivity.kt\u003C\u002Fh2\u003E\n\u003Cp\u003Eメニューを開くコードを書きます。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-class\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003EMainActivity\u003C\u002Fspan\u003E : \u003Cspan class=\"hljs-type\"\u003EAppCompatActivity\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E() {\n    \u003Cspan class=\"hljs-keyword\"\u003Eoverride\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efun\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003EonCreate\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-params\"\u003E(savedInstanceState: \u003Cspan class=\"hljs-type\"\u003EBundle\u003C\u002Fspan\u003E?)\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E {\n        \u003Cspan class=\"hljs-keyword\"\u003Esuper\u003C\u002Fspan\u003E.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n        \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F BottomFragment開く\u003C\u002Fspan\u003E\n        activity_main_bottom_menu.setOnClickListener {\n            MenuBottomFragment().show(supportFragmentManager, \u003Cspan class=\"hljs-string\"\u003E\"menu\"\u003C\u002Fspan\u003E)\n        }\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Ccode\u003EMenuBottomFragment\u003C\u002Fcode\u003Eが赤くなるのでこれから書いていきましょう。\u003C\u002Fp\u003E\n\u003Ch1\u003EMenuBottomFragment.kt\u003C\u002Fh1\u003E\n\u003Cp\u003Eを作成します。\u003Cbr\u003E\nよくわからん人は\u003Ccode\u003EMainActivity.kt\u003C\u002Fcode\u003Eのある場所に\u003Ccode\u003EMenuBottomFragment.kt\u003C\u002Fcode\u003Eを作ればいいです。\u003C\u002Fp\u003E\n\u003Ch2\u003Ebottom_fragment_menu.xml\u003C\u002Fh2\u003E\n\u003Cp\u003E\u003Ccode\u003Eres\u002Flayout\u003C\u002Fcode\u003Eの中に\u003Ccode\u003Ebottom_fragment_menu.xml\u003C\u002Fcode\u003Eを作成してください。\u003Cbr\u003E\n中身はこんな感じで\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-meta\"\u003E&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003ELinearLayout\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Exmlns:android\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"http:\u002F\u002Fschemas.android.com\u002Fapk\u002Fres\u002Fandroid\"\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Exmlns:app\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"http:\u002F\u002Fschemas.android.com\u002Fapk\u002Fres-auto\"\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Eandroid:layout_width\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"match_parent\"\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Eandroid:layout_height\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"match_parent\"\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Eandroid:orientation\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"vertical\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ecom.google.android.material.navigation.NavigationView\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-attr\"\u003Eandroid:id\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"@+id\u002Fbottom_fragment_menu_navigation_view\"\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-attr\"\u003Eandroid:layout_width\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"match_parent\"\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-attr\"\u003Eandroid:layout_height\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"match_parent\"\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-attr\"\u003Eapp:menu\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"@menu\u002Fbottom_fragment_menu\"\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003ELinearLayout\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2\u003EMenuBottomFragment.kt\u003C\u002Fh2\u003E\n\u003Cp\u003E今回はメニューを押したらToastを出すようにしてみました。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-class\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003EMenuBottomFragment\u003C\u002Fspan\u003E : \u003Cspan class=\"hljs-type\"\u003EBottomSheetDialogFragment\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E() {\n\n    \u003Cspan class=\"hljs-keyword\"\u003Eoverride\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efun\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003EonCreateView\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-params\"\u003E(\n        inflater: \u003Cspan class=\"hljs-type\"\u003ELayoutInflater\u003C\u002Fspan\u003E,\n        container: \u003Cspan class=\"hljs-type\"\u003EViewGroup\u003C\u002Fspan\u003E?,\n        savedInstanceState: \u003Cspan class=\"hljs-type\"\u003EBundle\u003C\u002Fspan\u003E?\n    )\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E: View? {\n        \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E inflater.inflate(R.layout.bottom_fragment_menu, container, \u003Cspan class=\"hljs-literal\"\u003Efalse\u003C\u002Fspan\u003E)\n    }\n\n    \u003Cspan class=\"hljs-keyword\"\u003Eoverride\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efun\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003EonViewCreated\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-params\"\u003E(view: \u003Cspan class=\"hljs-type\"\u003EView\u003C\u002Fspan\u003E, savedInstanceState: \u003Cspan class=\"hljs-type\"\u003EBundle\u003C\u002Fspan\u003E?)\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E {\n        \u003Cspan class=\"hljs-keyword\"\u003Esuper\u003C\u002Fspan\u003E.onViewCreated(view, savedInstanceState)\n        \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F メニュー押したとき\u003C\u002Fspan\u003E\n        bottom_fragment_menu_navigation_view.setNavigationItemSelectedListener {\n            Toast.makeText(context, it.title, Toast.LENGTH_SHORT).show()\n            \u003Cspan class=\"hljs-literal\"\u003Etrue\u003C\u002Fspan\u003E\n        }\n    }\n\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003Eこれで終わりです。おつ88888888888\u003C\u002Fp\u003E\n\u003Cp\u003Eあとは起動してボタンを押すと下からメニューが出てくると思います。\u003C\u002Fp\u003E\n\u003Ch1\u003Eソースコード\u003C\u002Fh1\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Ftakusan23\u002FNavigationViewSample\"\u003Ehttps:\u002F\u002Fgithub.com\u002Ftakusan23\u002FNavigationViewSample\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Ch1\u003Eおわりに\u003C\u002Fh1\u003E\n\u003Cp\u003EAndroid Studioくんに背景画像セットしてるせいでスクショが取れなかった。\u003Cbr\u003E\n次からはPreview版をブログ書く用に入れておきたいと思いましたまる\u003C\u002Fp\u003E\n",dir:"contents\u002Fposts\u002Fjson",base:"android_navigation_view.json",ext:".json",sourceBase:"android_navigation_view.md",sourceExt:".md",params:{slug:"android_navigation_view"}}],fetch:[],mutations:void 0});