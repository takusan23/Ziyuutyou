__NUXT_JSONP__("/posts/nuxt_2_13_sugoi", {data:[{title:"Nuxt.jsのFull Staticがすごい",created_at:"2020-06-27T00:00:00.000Z",tags:["NuxtJS","JavaScript","Vuetify"],bodyContent:"歯磨きしたら血が出た。ちょっとびっくりした\r\n\r\n# 本題\r\nNuxt.jsの2.13から`完全な静的生成`機能がついた模様。  \r\nむしろ今までは完全ではなかったのか？って話でよくわからないけど、この中にある`ルーティング自動生成`が多分強い。\r\n\r\n詳しくはこれ  \r\n[本家ブログ](https:\u002F\u002Fnuxtjs.org\u002Fblog\u002Fgoing-full-static)\r\n\r\n\r\n# こんなん読んでられんわ\r\n\r\n- 1.Nuxt.jsをアップデートする\r\n- 2.`nuxt.config.js`にこんな感じで`target:static`を指定\r\n```js\r\nexport default {\r\n  \u002F\u002F 静的サイト書き出し。universalとstatic入れてね\r\n  mode: 'universal',\r\n  target: 'static',\r\n}\r\n```\r\n- 3.`package.json`の`generate`スクリプトを以下に変更\r\n```json\r\n\"scripts\": {\r\n  \"generate\": \"nuxt build && nuxt export\",\r\n}\r\n```\r\n- 4.`npm run generate`を実行する。`dist`フォルダができる。おつかれ様です。\r\n- おまけ：`npx nuxt serve`で静的生成したサイトをすぐに確認できるようになりました。\r\n\r\n# 何ができるようになるの？\r\n- 新しくなった静的生成\r\n    - `nuxt generate`から\r\n    - `nuxt build && nuxt export`へ\r\n- 怖くないルーティング\r\n    - 勝手にページを解析し、リンクを自動で見つけて勝手に生成します。\r\n    - どういうことかと言うと、以下のJSの用に`generate.routes`を書く必要がもうないということです。**コメントと化した結構重要（多分一番めんどい）な部分**\r\n```js\r\nexport default {\r\n  generate: {\r\n    \u002F\u002F routes: generateRoutes, \u002F\u002F 生成する\r\n    dir: 'docs'\r\n  },\r\n}\r\n```\r\n\r\n# Nuxt.jsのアップデート\r\n2.0から2.13へ上げます。  \r\n## package.json 開いて\r\n\r\n`dependencies`の中の`nuxt`を`^2.13.1`にします。以下は一例\r\n\r\n```json\r\n\"dependencies\": {\r\n  \"@nuxtjs\u002Fgoogle-analytics\": \"^2.3.0\",\r\n  \"@nuxtjs\u002Fmarkdownit\": \"^1.2.9\",\r\n  \"@nuxtjs\u002Fpwa\": \"^3.0.0-0\",\r\n  \"markdown-it-footnote\": \"^3.0.2\",\r\n  \"markdown-it-highlight\": \"^0.2.0\",\r\n  \"nuxt\": \"^2.13.1\"\r\n},\r\n```\r\n\r\nなお私もよく分かっていない。`^`←これなに？\r\n\r\n## package-lock.json ファイルと node_modules フォルダを消す\r\n\r\nnpm installで再召喚するので大丈夫\r\n\r\n## npm install を実行\r\n`npm install`を実行します。  \r\nおそらくおま環だろうけど私の環境では**管理者権限**ないとできませんでした。\r\n\r\n### こける\r\nまあうまく行かないよね\r\n- `Unexpected end of JSON input while parsing`なんとか\r\n    - 管理者権限でcmd等を開いて`npm cache clean --force`を実行する。**何してるか分かってるよな？** って言われた。分からない  \r\n    `npm WARN using --force I sure hope you know what you are doing.`\r\n\r\n# nuxt.config.js を開く\r\n開いたら、静的生成して＾～ってNuxtに伝えます。  \r\n`target:static`を追加します。\r\n\r\n```js\r\nexport default {\r\n  \u002F\u002F 静的サイト書き出し。universalとstatic入れてね\r\n  mode: 'universal',\r\n  target: 'static',\r\n}\r\n```\r\n\r\n# nuxt build && nuxt export\r\n`package.json`を開いて、`script`にある、`generate`を書き換えます。\r\n\r\n```json\r\n\"scripts\": {\r\n  \"generate\": \"nuxt build && nuxt export\",\r\n}\r\n```\r\n\r\n# npm run generate 実行\r\nすると生成されます。お疲れ様でした～\r\n\r\n# 怖くないルーティング  \r\n今回のNuxt.jsさんは、勝手にリンクを見つけてリンクの分だけ生成するようになったのでもう不要です。  \r\nいやールーティング面倒だったのでこれはとてもありがたい。\r\n\r\n一応、`nuxt.config.js`で明示的に無効にする（`generate.crawler: false`）ことで旧仕様（`generate.routes`）を利用できるっぽい。\r\n\r\n# 静的生成したサイトを確認できる機能\r\n本番環境（私ならNetlify）に公開された場合どんな感じに見れるのか（多分変わらんと思うけど）を確認できる機能が付きました。\r\n\r\n- 一度きりなら\r\n    - `npx nuxt serve`（package.jsonにscript書かなくても、`npx`使えば直接使える）\r\n- package.jsonに書くなら\r\n```json\r\n\"scripts\": {\r\n  \"staticdev\": \"nuxt serve\",\r\n}\r\n```\r\n実行は`npm run staticdev`（別に`staticdev`って名前である必要はない。みんなはかっこいい名前をつけてあげよう）\r\n\r\n# おまけ\r\n## Vuetifyが変わった？\r\n`v-content`から`v-main`になった模様\r\n\r\nあと強制上書きCSSがまた動かなくなってた（力技やめとけ）  \r\nそれでふと`SCSS`ってやつでVuetifyが適用するCSSの内容変えられるやんって思って見てみると、あるんですね～\r\n\r\n```scss\r\n\u002F\u002F Vuetifyが勝手に色つける問題\r\n$code-background-color: '#000000';\r\n```\r\n\r\n`code-background-color`なんていつの間に追加してたの？\r\n\r\nまた今度やろうと思います\r\n\r\n# おわりに\r\n`npx`なんて便利な機能あったんですね（え）\r\n\r\n# 参考にしました。\r\nhttps:\u002F\u002Fnuxtjs.org\u002Fblog\u002Fgoing-full-static  \r\nhttps:\u002F\u002Fja.nuxtjs.org\u002Fguide\u002Fupgrading\u002F  \r\nhttps:\u002F\u002Fmicrocms.io\u002Fblog\u002Fnuxt-full-static-generation\u002F",bodyHtml:"\u003Cp\u003E歯磨きしたら血が出た。ちょっとびっくりした\u003C\u002Fp\u003E\n\u003Ch1\u003E本題\u003C\u002Fh1\u003E\n\u003Cp\u003ENuxt.jsの2.13から\u003Ccode\u003E完全な静的生成\u003C\u002Fcode\u003E機能がついた模様。\u003Cbr\u003E\nむしろ今までは完全ではなかったのか？って話でよくわからないけど、この中にある\u003Ccode\u003Eルーティング自動生成\u003C\u002Fcode\u003Eが多分強い。\u003C\u002Fp\u003E\n\u003Cp\u003E詳しくはこれ\u003Cbr\u003E\n\u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fblog\u002Fgoing-full-static\"\u003E本家ブログ\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Ch1\u003Eこんなん読んでられんわ\u003C\u002Fh1\u003E\n\u003Cul\u003E\n\u003Cli\u003E1.Nuxt.jsをアップデートする\u003C\u002Fli\u003E\n\u003Cli\u003E2.\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003Eにこんな感じで\u003Ccode\u003Etarget:static\u003C\u002Fcode\u003Eを指定\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 静的サイト書き出し。universalとstatic入れてね\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Emode\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E'universal'\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-attr\"\u003Etarget\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E'static'\u003C\u002Fspan\u003E,\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cul\u003E\n\u003Cli\u003E3.\u003Ccode\u003Epackage.json\u003C\u002Fcode\u003Eの\u003Ccode\u003Egenerate\u003C\u002Fcode\u003Eスクリプトを以下に変更\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\"scripts\": {\n  \"generate\": \"nuxt build &amp;&amp; nuxt export\",\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cul\u003E\n\u003Cli\u003E4.\u003Ccode\u003Enpm run generate\u003C\u002Fcode\u003Eを実行する。\u003Ccode\u003Edist\u003C\u002Fcode\u003Eフォルダができる。おつかれ様です。\u003C\u002Fli\u003E\n\u003Cli\u003Eおまけ：\u003Ccode\u003Enpx nuxt serve\u003C\u002Fcode\u003Eで静的生成したサイトをすぐに確認できるようになりました。\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch1\u003E何ができるようになるの？\u003C\u002Fh1\u003E\n\u003Cul\u003E\n\u003Cli\u003E新しくなった静的生成\n\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003Enuxt generate\u003C\u002Fcode\u003Eから\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Enuxt build &amp;&amp; nuxt export\u003C\u002Fcode\u003Eへ\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E怖くないルーティング\n\u003Cul\u003E\n\u003Cli\u003E勝手にページを解析し、リンクを自動で見つけて勝手に生成します。\u003C\u002Fli\u003E\n\u003Cli\u003Eどういうことかと言うと、以下のJSの用に\u003Ccode\u003Egenerate.routes\u003C\u002Fcode\u003Eを書く必要がもうないということです。\u003Cstrong\u003Eコメントと化した結構重要（多分一番めんどい）な部分\u003C\u002Fstrong\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Egenerate\u003C\u002Fspan\u003E: {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F routes: generateRoutes, \u002F\u002F 生成する\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Edir\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E'docs'\u003C\u002Fspan\u003E\n  },\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch1\u003ENuxt.jsのアップデート\u003C\u002Fh1\u003E\n\u003Cp\u003E2.0から2.13へ上げます。\u003C\u002Fp\u003E\n\u003Ch2\u003Epackage.json 開いて\u003C\u002Fh2\u003E\n\u003Cp\u003E\u003Ccode\u003Edependencies\u003C\u002Fcode\u003Eの中の\u003Ccode\u003Enuxt\u003C\u002Fcode\u003Eを\u003Ccode\u003E^2.13.1\u003C\u002Fcode\u003Eにします。以下は一例\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\"dependencies\": {\n  \"@nuxtjs\u002Fgoogle-analytics\": \"^2.3.0\",\n  \"@nuxtjs\u002Fmarkdownit\": \"^1.2.9\",\n  \"@nuxtjs\u002Fpwa\": \"^3.0.0-0\",\n  \"markdown-it-footnote\": \"^3.0.2\",\n  \"markdown-it-highlight\": \"^0.2.0\",\n  \"nuxt\": \"^2.13.1\"\n},\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003Eなお私もよく分かっていない。\u003Ccode\u003E^\u003C\u002Fcode\u003E←これなに？\u003C\u002Fp\u003E\n\u003Ch2\u003Epackage-lock.json ファイルと node_modules フォルダを消す\u003C\u002Fh2\u003E\n\u003Cp\u003Enpm installで再召喚するので大丈夫\u003C\u002Fp\u003E\n\u003Ch2\u003Enpm install を実行\u003C\u002Fh2\u003E\n\u003Cp\u003E\u003Ccode\u003Enpm install\u003C\u002Fcode\u003Eを実行します。\u003Cbr\u003E\nおそらくおま環だろうけど私の環境では\u003Cstrong\u003E管理者権限\u003C\u002Fstrong\u003Eないとできませんでした。\u003C\u002Fp\u003E\n\u003Ch3\u003Eこける\u003C\u002Fh3\u003E\n\u003Cp\u003Eまあうまく行かないよね\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003EUnexpected end of JSON input while parsing\u003C\u002Fcode\u003Eなんとか\n\u003Cul\u003E\n\u003Cli\u003E管理者権限でcmd等を開いて\u003Ccode\u003Enpm cache clean --force\u003C\u002Fcode\u003Eを実行する。\u003Cstrong\u003E何してるか分かってるよな？\u003C\u002Fstrong\u003E って言われた。分からない\u003Cbr\u003E\n\u003Ccode\u003Enpm WARN using --force I sure hope you know what you are doing.\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch1\u003Enuxt.config.js を開く\u003C\u002Fh1\u003E\n\u003Cp\u003E開いたら、静的生成して＾～ってNuxtに伝えます。\u003Cbr\u003E\n\u003Ccode\u003Etarget:static\u003C\u002Fcode\u003Eを追加します。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 静的サイト書き出し。universalとstatic入れてね\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Emode\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E'universal'\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-attr\"\u003Etarget\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E'static'\u003C\u002Fspan\u003E,\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch1\u003Enuxt build &amp;&amp; nuxt export\u003C\u002Fh1\u003E\n\u003Cp\u003E\u003Ccode\u003Epackage.json\u003C\u002Fcode\u003Eを開いて、\u003Ccode\u003Escript\u003C\u002Fcode\u003Eにある、\u003Ccode\u003Egenerate\u003C\u002Fcode\u003Eを書き換えます。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\"scripts\": {\n  \"generate\": \"nuxt build &amp;&amp; nuxt export\",\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch1\u003Enpm run generate 実行\u003C\u002Fh1\u003E\n\u003Cp\u003Eすると生成されます。お疲れ様でした～\u003C\u002Fp\u003E\n\u003Ch1\u003E怖くないルーティング\u003C\u002Fh1\u003E\n\u003Cp\u003E今回のNuxt.jsさんは、勝手にリンクを見つけてリンクの分だけ生成するようになったのでもう不要です。\u003Cbr\u003E\nいやールーティング面倒だったのでこれはとてもありがたい。\u003C\u002Fp\u003E\n\u003Cp\u003E一応、\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003Eで明示的に無効にする（\u003Ccode\u003Egenerate.crawler: false\u003C\u002Fcode\u003E）ことで旧仕様（\u003Ccode\u003Egenerate.routes\u003C\u002Fcode\u003E）を利用できるっぽい。\u003C\u002Fp\u003E\n\u003Ch1\u003E静的生成したサイトを確認できる機能\u003C\u002Fh1\u003E\n\u003Cp\u003E本番環境（私ならNetlify）に公開された場合どんな感じに見れるのか（多分変わらんと思うけど）を確認できる機能が付きました。\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E一度きりなら\n\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003Enpx nuxt serve\u003C\u002Fcode\u003E（package.jsonにscript書かなくても、\u003Ccode\u003Enpx\u003C\u002Fcode\u003E使えば直接使える）\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003Epackage.jsonに書くなら\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\"scripts\": {\n  \"staticdev\": \"nuxt serve\",\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E実行は\u003Ccode\u003Enpm run staticdev\u003C\u002Fcode\u003E（別に\u003Ccode\u003Estaticdev\u003C\u002Fcode\u003Eって名前である必要はない。みんなはかっこいい名前をつけてあげよう）\u003C\u002Fp\u003E\n\u003Ch1\u003Eおまけ\u003C\u002Fh1\u003E\n\u003Ch2\u003EVuetifyが変わった？\u003C\u002Fh2\u003E\n\u003Cp\u003E\u003Ccode\u003Ev-content\u003C\u002Fcode\u003Eから\u003Ccode\u003Ev-main\u003C\u002Fcode\u003Eになった模様\u003C\u002Fp\u003E\n\u003Cp\u003Eあと強制上書きCSSがまた動かなくなってた（力技やめとけ）\u003Cbr\u003E\nそれでふと\u003Ccode\u003ESCSS\u003C\u002Fcode\u003EってやつでVuetifyが適用するCSSの内容変えられるやんって思って見てみると、あるんですね～\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Vuetifyが勝手に色つける問題\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-variable\"\u003E$code-background-color\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E'#000000'\u003C\u002Fspan\u003E;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Ccode\u003Ecode-background-color\u003C\u002Fcode\u003Eなんていつの間に追加してたの？\u003C\u002Fp\u003E\n\u003Cp\u003Eまた今度やろうと思います\u003C\u002Fp\u003E\n\u003Ch1\u003Eおわりに\u003C\u002Fh1\u003E\n\u003Cp\u003E\u003Ccode\u003Enpx\u003C\u002Fcode\u003Eなんて便利な機能あったんですね（え）\u003C\u002Fp\u003E\n\u003Ch1\u003E参考にしました。\u003C\u002Fh1\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fblog\u002Fgoing-full-static\"\u003Ehttps:\u002F\u002Fnuxtjs.org\u002Fblog\u002Fgoing-full-static\u003C\u002Fa\u003E\u003Cbr\u003E\n\u003Ca href=\"https:\u002F\u002Fja.nuxtjs.org\u002Fguide\u002Fupgrading\u002F\"\u003Ehttps:\u002F\u002Fja.nuxtjs.org\u002Fguide\u002Fupgrading\u002F\u003C\u002Fa\u003E\u003Cbr\u003E\n\u003Ca href=\"https:\u002F\u002Fmicrocms.io\u002Fblog\u002Fnuxt-full-static-generation\u002F\"\u003Ehttps:\u002F\u002Fmicrocms.io\u002Fblog\u002Fnuxt-full-static-generation\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",dir:"contents\u002Fposts\u002Fjson",base:"nuxt_2_13_sugoi.json",ext:".json",sourceBase:"nuxt_2_13_sugoi.md",sourceExt:".md",params:{slug:"nuxt_2_13_sugoi"}}],fetch:[],mutations:void 0});