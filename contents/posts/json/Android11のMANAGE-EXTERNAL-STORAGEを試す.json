{
  "title": "Android11のMANAGE_EXTERNAL_STORAGEを試す",
  "created_at": "2020-05-04T00:44:24.000Z",
  "tags": [
    "Android",
    "Android11"
  ],
  "bodyContent": "どうもこんばんわ。  \nニコ生で「とある科学の超電磁砲T」の1~12話一挙放送見ました。初見だったけど面白かったです。OPかっこいい。  \n1期2期もいつか見たいですね。\n\n# 本題\nAndroid 11 からまーたファイルアクセスの方法が変わるらしい。はー？  \nどうやらファイルマネージャーアプリとかバックアップアプリ向けのファイルアクセス権限**MANAGE_EXTERNAL_STORAGE**が追加されるそうな。\n\n# `MANAGE_EXTERNAL_STORAGE` #とは\nAndroid 9以前のように生パス（おそらく`/storage/emulated/0/Download`みたいなパスのこと）でのアクセスができるようになる。  \n`ACTION_OPEN_DOCUMENT_TREE`でSDカードへアクセスできないしSDカードアクセスするにはこれしかない？。もうSDカード使わせる気ないなこれ。  \n\nそんな有能そうな権限ですが  \n\n> デベロッパープレビューの今後のバージョンでは、この権限が必要なアプリ向けのガイドラインをGoogle Playに提供する予定です。\n\n[引用元](https://developer.android.com/preview/privacy/storage#manage-device-storage)\n\nがなんとか書いてあるのでなんか追加で作業が必要なのかな。  \nむやみにぽんぽん打てる訳ではないっぽい？\n\nちなみに`MANAGE_EXTERNAL_STORAGE`でも外部のアプリ固有領域(Android/data)にはアクセスできません。この領域ってもうファイルマネージャーとか端末単体じゃ見れないのかな（できないのそこそこ不便）。\n\n# 環境\n| name           | value        |\n|----------------|--------------|\n| Android        | 11 DP3       |\n| Android Studio | 4.1 Canary 8 |\n| 言語           | Kotlin       |\n\n# やってみる\n## Android 11のAPI使えるように\nAndroid 11のSDKは各自入れてきてね。  \nappフォルダの方のbuild.gradle開いてandroid{}のところを書き換えます。\n```gradle\nandroid {\n    compileSdkVersion 'android-R'\n    buildToolsVersion \"29.0.3\"\n\n    defaultConfig {\n        applicationId \"com.example.manageexternalstoragesample\"\n        minSdkVersion \"R\"\n        targetSdkVersion 29\n        versionCode 1\n        versionName \"1.0\"\n\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n    }\n\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n        }\n    }\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8\n    }\n    kotlinOptions {\n        jvmTarget = '1.8'\n    }\n}\n```\n\n`compileSdkVersion 'android-R'`でいいらしい？\n\n## 権限追加\n何故か補充が効かないのでコピペ\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"com.example.manageexternalstoragesample\">\n\n    <uses-permission android:name=\"android.permission.MANAGE_EXTERNAL_STORAGE\" />\n\n    <application\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_launcher\"\n        android:label=\"@string/app_name\"\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/Theme.ManageExternalStorageSample\">\n        <activity android:name=\".MainActivity\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n    </application>\n\n</manifest>\n```\n\n## レイアウト\nそろそろConstraintLayout使えるようになりたい（難しそう）\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:gravity=\"center\"\n    android:orientation=\"vertical\"\n    tools:context=\".MainActivity\">\n    \n    <Button\n        android:id=\"@+id/button\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"権限付与\" />\n\n    <Button\n        android:id=\"@+id/show\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"取得\" />\n\n    <Button\n        android:id=\"@+id/read\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"書き込み\" />\n</LinearLayout>\n```\n\n## 権限もらう\nこれも補充が効かないのでIntentの中身はコピペで\n```kotlin\nbutton.setOnClickListener {\n    val intent = Intent(\"android.settings.MANAGE_ALL_FILES_ACCESS_PERMISSION\")\n    startActivity(intent)\n}\n```\nAndroid 11から他のアプリに重ねるの権限取得で直接アプリの設定に飛べなくなりましたが、これも直接飛べずに一覧画面から選ぶ形式になってます。\n\n権限取得ボタン押すと一覧画面でます\n\n{% asset_img list.png list %}\n\n{% asset_img screen.png screen %}\n\n\n## 生パスで読み込んでみる\nAndroid 10から使えなくなった以下のコードも ~~`MANAGE_EXTERNAL_STORAGE`権限を持っていれば・・・！~~  \nAndroid 11では**読み込みなら読み込み権限(READ_EXTERNAL_STORAGE)すらいらない**です。  \nただこの仕様はAndroid 11で追加されたため、Android 10でこれ使うにはManifestに`requestLegacyExternalStorage=\"true\"`(Scoped Storage無効化)を指定する必要があります。\n```kotlin\nshow.setOnClickListener {\n    File(\"/storage/emulated/0/\").listFiles().forEach {\n        println(it.name)\n    }\n}\n```\n出力結果\n```console\nAndroid\nMusic\nPodcasts\nRingtones\nAlarms\nNotifications\nPictures\nMovies\nDownload\nDCIM\n```\n以下略\n\n## 生パスで書き込んで見る\nAndroid 10から使えなくなった以下のコードも`MANAGE_EXTERNAL_STORAGE`権限の前では・・・！  \nあとボタンのIDが`read`になってるけど`write`が命名的には正解ですね。プログラム的には間違ってないけど。\n```kotlin\nread.setOnClickListener {\n    File(\"/storage/emulated/0/書き込みテスト.txt\").apply {\n        createNewFile()\n        writeText(\"書き込めてる～？\")\n    }\n}\n```\n\nKotlinの拡張関数`writeText()`使ってるから一行で書き込めてるけどJavaだと長くなりそう。\n\n多分これもAndroid 10を対象にするにはScoped Storageを無効にする必要があります多分。\n\n{% asset_img write.png write %}\n\n## 全部くっつけたコード\n\n```kotlin\nclass MainActivity : AppCompatActivity() {\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        button.setOnClickListener {\n            val intent = Intent(\"android.settings.MANAGE_ALL_FILES_ACCESS_PERMISSION\")\n            startActivity(intent)\n        }\n\n        show.setOnClickListener {\n            File(\"/storage/emulated/0/\").listFiles().forEach {\n                println(it.name)\n            }\n        }\n\n        read.setOnClickListener {\n            File(\"/storage/emulated/0/書き込みテスト.txt\").apply {\n                createNewFile()\n                writeText(\"書き込めてる～？\")\n            }\n        }\n\n    }\n}\n```\n\n# おわりに\nくっそめんどくさくね？(SAFだのScopedStorageだのMediaStoreだの)  \nあとSDカード入る実機ほしい。Xperiaの21:9使ってみたい。  \n（S7 EdgeあるけどなんかSDM 820の割にNexus 7 2013のほうが動くからハズレSoC引いた？）\n\n# ソースコード\nhttps://github.com/takusan23/ManageExternalStorageSample",
  "bodyHtml": "<p>どうもこんばんわ。<br>\nニコ生で「とある科学の超電磁砲T」の1~12話一挙放送見ました。初見だったけど面白かったです。OPかっこいい。<br>\n1期2期もいつか見たいですね。</p>\n<h1>本題</h1>\n<p>Android 11 からまーたファイルアクセスの方法が変わるらしい。はー？<br>\nどうやらファイルマネージャーアプリとかバックアップアプリ向けのファイルアクセス権限<strong>MANAGE_EXTERNAL_STORAGE</strong>が追加されるそうな。</p>\n<h1><code>MANAGE_EXTERNAL_STORAGE</code> #とは</h1>\n<p>Android 9以前のように生パス（おそらく<code>/storage/emulated/0/Download</code>みたいなパスのこと）でのアクセスができるようになる。<br>\n<code>ACTION_OPEN_DOCUMENT_TREE</code>でSDカードへアクセスできないしSDカードアクセスするにはこれしかない？。もうSDカード使わせる気ないなこれ。</p>\n<p>そんな有能そうな権限ですが</p>\n<blockquote>\n<p>デベロッパープレビューの今後のバージョンでは、この権限が必要なアプリ向けのガイドラインをGoogle Playに提供する予定です。</p>\n</blockquote>\n<p><a href=\"https://developer.android.com/preview/privacy/storage#manage-device-storage\">引用元</a></p>\n<p>がなんとか書いてあるのでなんか追加で作業が必要なのかな。<br>\nむやみにぽんぽん打てる訳ではないっぽい？</p>\n<p>ちなみに<code>MANAGE_EXTERNAL_STORAGE</code>でも外部のアプリ固有領域(Android/data)にはアクセスできません。この領域ってもうファイルマネージャーとか端末単体じゃ見れないのかな（できないのそこそこ不便）。</p>\n<h1>環境</h1>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Android</td>\n<td>11 DP3</td>\n</tr>\n<tr>\n<td>Android Studio</td>\n<td>4.1 Canary 8</td>\n</tr>\n<tr>\n<td>言語</td>\n<td>Kotlin</td>\n</tr>\n</tbody>\n</table>\n<h1>やってみる</h1>\n<h2>Android 11のAPI使えるように</h2>\n<p>Android 11のSDKは各自入れてきてね。<br>\nappフォルダの方のbuild.gradle開いてandroid{}のところを書き換えます。</p>\n<pre><code class=\"hljs\">android {\n    compileSdkVersion <span class=\"hljs-string\">'android-R'</span>\n    buildToolsVersion <span class=\"hljs-string\">\"29.0.3\"</span>\n\n    defaultConfig {\n        applicationId <span class=\"hljs-string\">\"com.example.manageexternalstoragesample\"</span>\n        minSdkVersion <span class=\"hljs-string\">\"R\"</span>\n        targetSdkVersion <span class=\"hljs-number\">29</span>\n        versionCode <span class=\"hljs-number\">1</span>\n        versionName <span class=\"hljs-string\">\"1.0\"</span>\n\n        testInstrumentationRunner <span class=\"hljs-string\">\"androidx.test.runner.AndroidJUnitRunner\"</span>\n    }\n\n    buildTypes {\n        release {\n            minifyEnabled <span class=\"hljs-keyword\">false</span>\n            proguardFiles getDefaultProguardFile(<span class=\"hljs-string\">'proguard-android-optimize.txt'</span>), <span class=\"hljs-string\">'proguard-rules.pro'</span>\n        }\n    }\n    compileOptions {\n        <span class=\"hljs-keyword\">sourceCompatibility</span> JavaVersion.VERSION_1_8\n        <span class=\"hljs-keyword\">targetCompatibility</span> JavaVersion.VERSION_1_8\n    }\n    kotlinOptions {\n        jvmTarget = <span class=\"hljs-string\">'1.8'</span>\n    }\n}</code></pre><p><code>compileSdkVersion 'android-R'</code>でいいらしい？</p>\n<h2>権限追加</h2>\n<p>何故か補充が効かないのでコピペ</p>\n<pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">manifest</span> <span class=\"hljs-attr\">xmlns:android</span>=<span class=\"hljs-string\">\"http://schemas.android.com/apk/res/android\"</span>\n    <span class=\"hljs-attr\">package</span>=<span class=\"hljs-string\">\"com.example.manageexternalstoragesample\"</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">uses-permission</span> <span class=\"hljs-attr\">android:name</span>=<span class=\"hljs-string\">\"android.permission.MANAGE_EXTERNAL_STORAGE\"</span> /&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">application</span>\n        <span class=\"hljs-attr\">android:allowBackup</span>=<span class=\"hljs-string\">\"true\"</span>\n        <span class=\"hljs-attr\">android:icon</span>=<span class=\"hljs-string\">\"@mipmap/ic_launcher\"</span>\n        <span class=\"hljs-attr\">android:label</span>=<span class=\"hljs-string\">\"@string/app_name\"</span>\n        <span class=\"hljs-attr\">android:roundIcon</span>=<span class=\"hljs-string\">\"@mipmap/ic_launcher_round\"</span>\n        <span class=\"hljs-attr\">android:supportsRtl</span>=<span class=\"hljs-string\">\"true\"</span>\n        <span class=\"hljs-attr\">android:theme</span>=<span class=\"hljs-string\">\"@style/Theme.ManageExternalStorageSample\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">activity</span> <span class=\"hljs-attr\">android:name</span>=<span class=\"hljs-string\">\".MainActivity\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">intent-filter</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">action</span> <span class=\"hljs-attr\">android:name</span>=<span class=\"hljs-string\">\"android.intent.action.MAIN\"</span> /&gt;</span>\n\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">category</span> <span class=\"hljs-attr\">android:name</span>=<span class=\"hljs-string\">\"android.intent.category.LAUNCHER\"</span> /&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">intent-filter</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">activity</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">application</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">manifest</span>&gt;</span></code></pre><h2>レイアウト</h2>\n<p>そろそろConstraintLayout使えるようになりたい（難しそう）</p>\n<pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">LinearLayout</span> <span class=\"hljs-attr\">xmlns:android</span>=<span class=\"hljs-string\">\"http://schemas.android.com/apk/res/android\"</span>\n    <span class=\"hljs-attr\">xmlns:app</span>=<span class=\"hljs-string\">\"http://schemas.android.com/apk/res-auto\"</span>\n    <span class=\"hljs-attr\">xmlns:tools</span>=<span class=\"hljs-string\">\"http://schemas.android.com/tools\"</span>\n    <span class=\"hljs-attr\">android:layout_width</span>=<span class=\"hljs-string\">\"match_parent\"</span>\n    <span class=\"hljs-attr\">android:layout_height</span>=<span class=\"hljs-string\">\"match_parent\"</span>\n    <span class=\"hljs-attr\">android:gravity</span>=<span class=\"hljs-string\">\"center\"</span>\n    <span class=\"hljs-attr\">android:orientation</span>=<span class=\"hljs-string\">\"vertical\"</span>\n    <span class=\"hljs-attr\">tools:context</span>=<span class=\"hljs-string\">\".MainActivity\"</span>&gt;</span>\n    \n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span>\n        <span class=\"hljs-attr\">android:id</span>=<span class=\"hljs-string\">\"@+id/button\"</span>\n        <span class=\"hljs-attr\">android:layout_width</span>=<span class=\"hljs-string\">\"wrap_content\"</span>\n        <span class=\"hljs-attr\">android:layout_height</span>=<span class=\"hljs-string\">\"wrap_content\"</span>\n        <span class=\"hljs-attr\">android:text</span>=<span class=\"hljs-string\">\"権限付与\"</span> /&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span>\n        <span class=\"hljs-attr\">android:id</span>=<span class=\"hljs-string\">\"@+id/show\"</span>\n        <span class=\"hljs-attr\">android:layout_width</span>=<span class=\"hljs-string\">\"wrap_content\"</span>\n        <span class=\"hljs-attr\">android:layout_height</span>=<span class=\"hljs-string\">\"wrap_content\"</span>\n        <span class=\"hljs-attr\">android:text</span>=<span class=\"hljs-string\">\"取得\"</span> /&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span>\n        <span class=\"hljs-attr\">android:id</span>=<span class=\"hljs-string\">\"@+id/read\"</span>\n        <span class=\"hljs-attr\">android:layout_width</span>=<span class=\"hljs-string\">\"wrap_content\"</span>\n        <span class=\"hljs-attr\">android:layout_height</span>=<span class=\"hljs-string\">\"wrap_content\"</span>\n        <span class=\"hljs-attr\">android:text</span>=<span class=\"hljs-string\">\"書き込み\"</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">LinearLayout</span>&gt;</span></code></pre><h2>権限もらう</h2>\n<p>これも補充が効かないのでIntentの中身はコピペで</p>\n<pre><code class=\"hljs\">button.setOnClickListener {\n    <span class=\"hljs-keyword\">val</span> intent = Intent(<span class=\"hljs-string\">\"android.settings.MANAGE_ALL_FILES_ACCESS_PERMISSION\"</span>)\n    startActivity(intent)\n}</code></pre><p>Android 11から他のアプリに重ねるの権限取得で直接アプリの設定に飛べなくなりましたが、これも直接飛べずに一覧画面から選ぶ形式になってます。</p>\n<p>権限取得ボタン押すと一覧画面でます</p>\n<p>{% asset_img list.png list %}</p>\n<p>{% asset_img screen.png screen %}</p>\n<h2>生パスで読み込んでみる</h2>\n<p>Android 10から使えなくなった以下のコードも <s><code>MANAGE_EXTERNAL_STORAGE</code>権限を持っていれば・・・！</s><br>\nAndroid 11では<strong>読み込みなら読み込み権限(READ_EXTERNAL_STORAGE)すらいらない</strong>です。<br>\nただこの仕様はAndroid 11で追加されたため、Android 10でこれ使うにはManifestに<code>requestLegacyExternalStorage=&quot;true&quot;</code>(Scoped Storage無効化)を指定する必要があります。</p>\n<pre><code class=\"hljs\">show.setOnClickListener {\n    File(<span class=\"hljs-string\">\"/storage/emulated/0/\"</span>).listFiles().forEach {\n        println(it.name)\n    }\n}</code></pre><p>出力結果</p>\n<pre><code class=\"hljs\">Android\nMusic\nPodcasts\nRingtones\nAlarms\nNotifications\nPictures\nMovies\nDownload\nDCIM</code></pre><p>以下略</p>\n<h2>生パスで書き込んで見る</h2>\n<p>Android 10から使えなくなった以下のコードも<code>MANAGE_EXTERNAL_STORAGE</code>権限の前では・・・！<br>\nあとボタンのIDが<code>read</code>になってるけど<code>write</code>が命名的には正解ですね。プログラム的には間違ってないけど。</p>\n<pre><code class=\"hljs\">read.setOnClickListener {\n    File(<span class=\"hljs-string\">\"/storage/emulated/0/書き込みテスト.txt\"</span>).apply {\n        createNewFile()\n        writeText(<span class=\"hljs-string\">\"書き込めてる～？\"</span>)\n    }\n}</code></pre><p>Kotlinの拡張関数<code>writeText()</code>使ってるから一行で書き込めてるけどJavaだと長くなりそう。</p>\n<p>多分これもAndroid 10を対象にするにはScoped Storageを無効にする必要があります多分。</p>\n<p>{% asset_img write.png write %}</p>\n<h2>全部くっつけたコード</h2>\n<pre><code class=\"hljs\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MainActivity</span> : <span class=\"hljs-type\">AppCompatActivity</span></span>() {\n    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">onCreate</span><span class=\"hljs-params\">(savedInstanceState: <span class=\"hljs-type\">Bundle</span>?)</span></span> {\n        <span class=\"hljs-keyword\">super</span>.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        button.setOnClickListener {\n            <span class=\"hljs-keyword\">val</span> intent = Intent(<span class=\"hljs-string\">\"android.settings.MANAGE_ALL_FILES_ACCESS_PERMISSION\"</span>)\n            startActivity(intent)\n        }\n\n        show.setOnClickListener {\n            File(<span class=\"hljs-string\">\"/storage/emulated/0/\"</span>).listFiles().forEach {\n                println(it.name)\n            }\n        }\n\n        read.setOnClickListener {\n            File(<span class=\"hljs-string\">\"/storage/emulated/0/書き込みテスト.txt\"</span>).apply {\n                createNewFile()\n                writeText(<span class=\"hljs-string\">\"書き込めてる～？\"</span>)\n            }\n        }\n\n    }\n}</code></pre><h1>おわりに</h1>\n<p>くっそめんどくさくね？(SAFだのScopedStorageだのMediaStoreだの)<br>\nあとSDカード入る実機ほしい。Xperiaの21:9使ってみたい。<br>\n（S7 EdgeあるけどなんかSDM 820の割にNexus 7 2013のほうが動くからハズレSoC引いた？）</p>\n<h1>ソースコード</h1>\n<p>https://github.com/takusan23/ManageExternalStorageSample</p>\n",
  "dir": "contents/posts/json",
  "base": "Android11のMANAGE-EXTERNAL-STORAGEを試す.json",
  "ext": ".json",
  "sourceBase": "Android11のMANAGE-EXTERNAL-STORAGEを試す.md",
  "sourceExt": ".md"
}