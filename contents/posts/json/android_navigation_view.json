{
  "title": "AndroidのNavigationViewって便利じゃねって話。下から出てくるメニューの作り方",
  "created_at": "2020-07-01T00:00:00.000Z",
  "tags": [
    "Android",
    "Kotlin",
    "MaterialDesign"
  ],
  "bodyContent": "今まで`TextView`並べてたのがｂｋみたいだわ  \r\nそんなことより7月ですね。\r\n\r\n# 本題\r\nこういうのを作ります。  \r\n\r\n![Imgur](https://imgur.com/u1b56Rr.png)\r\n\r\n# 環境\r\n| なまえ  | あたい                            |\r\n|---------|-----------------------------------|\r\n| Android | 11 Beta 1 (5以降なら動くはずです) |\r\n| 言語    | Kotlin                            |\r\n\r\n# マテリアルデザインのライブラリを入れる\r\n\r\n`appフォルダ`の方にある`build.gradle`を開きます。  \r\n開いたら、`dependencies`に追記します。\r\n\r\n```gradle\r\ndependencies {\r\n    // Material Design\r\n    implementation 'com.google.android.material:material:1.3.0-alpha01'\r\n    // 省略\r\n}\r\n```\r\n\r\nあと多分関係ないけど、Java 8を使うようにしておくと今後幸せになれるかもしれない。\r\n\r\n```gradle\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"30.0.0\"\r\n    // 省略\r\n    compileOptions {\r\n        sourceCompatibility = 1.8\r\n        targetCompatibility = 1.8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"1.8\"\r\n    }\r\n}\r\n```\r\n\r\n# styles.xml を書き換える\r\nこれしないと **メニューを押したときの背景** がちゃんと反映されないと思います。  \r\nといっても`parent`を`Theme.MaterialComponents.Light.DarkActionBar`に変更するだけです。難しくない\r\n\r\n```xml\r\n<resources>\r\n    <!-- Base application theme. -->\r\n    <style name=\"AppTheme\" parent=\"Theme.MaterialComponents.Light.DarkActionBar\">\r\n        <!-- Customize your theme here. -->\r\n        <item name=\"colorPrimary\">@color/colorPrimary</item>\r\n        <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\r\n        <item name=\"colorAccent\">@color/colorAccent</item>\r\n    </style>\r\n\r\n</resources>\r\n```\r\n\r\n# メニュー作成\r\n## menuフォルダの中にファイルを置く\r\n\r\n`res`の中に`menu`フォルダを作ります。  \r\nできたら、`bottom_fragment_menu.xml`ファイルを置きます。\r\n\r\n## アイコンを取ってくる\r\nAndroid Studio 4.0 からアイコンを選ぶ際に、Outlinedなアイコンが選択可能になりました。たすかる  \r\n`Vector Asset`を開いて、好きなアイコンを取ってきてください。  \r\n起動方法は、`Shiftキーを3連続`押して`Vector Asset`って入力すれば多分出ると思います。`macOSのSpotlight的ななにか（macOS触ったこと無いけど）`\r\n\r\n![Imgur](https://imgur.com/EIxL4JP.png)\r\n\r\n## bottom_fragment_menu.xml を書く\r\n以下のように。  \r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n    <group android:checkableBehavior=\"single\">\r\n        <item\r\n            android:id=\"@+id/nav_menu_java\"\r\n            android:icon=\"@drawable/ic_outline_settings_24\"\r\n            android:title=\"Java\" />\r\n        <item\r\n            android:id=\"@+id/nav_menu_kotlin\"\r\n            android:icon=\"@drawable/ic_outline_settings_24\"\r\n            android:title=\"Kotlin\" />\r\n        <item\r\n            android:id=\"@+id/nav_menu_js\"\r\n            android:icon=\"@drawable/ic_outline_settings_24\"\r\n            android:title=\"JS\" />\r\n    </group>\r\n</menu>\r\n```\r\n\r\n# MainActivity\r\n## activity_main.xml\r\nレイアウトを書き換えます。ボタン一個置くだけなので`ConstraintLayout`をそのまま使おうと思います。  \r\nいつかはちゃんと`ConstraintLayout`できるようにして**MotionLayoutの初め方**みたいな記事を書きたい。  \r\nちなみに現状`MotionLayout`使うと`RecyclerView`のクリックが行かない（たまによくクリックが反応しなくなる）のでもう少し様子見したほうが良い。\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".MainActivity\">\r\n\r\n    <Button\r\n        android:id=\"@+id/activity_main_bottom_menu\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"BottomMenu\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>\r\n```\r\n\r\n## MainActivity.kt\r\nメニューを開くコードを書きます。\r\n\r\n```kotlin\r\nclass MainActivity : AppCompatActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_main)\r\n        // BottomFragment開く\r\n        activity_main_bottom_menu.setOnClickListener {\r\n            MenuBottomFragment().show(supportFragmentManager, \"menu\")\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n`MenuBottomFragment`が赤くなるのでこれから書いていきましょう。\r\n\r\n# MenuBottomFragment.kt\r\nを作成します。  \r\nよくわからん人は`MainActivity.kt`のある場所に`MenuBottomFragment.kt`を作ればいいです。\r\n\r\n## bottom_fragment_menu.xml\r\n`res/layout`の中に`bottom_fragment_menu.xml`を作成してください。  \r\n中身はこんな感じで\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\">\r\n\r\n    <com.google.android.material.navigation.NavigationView\r\n        android:id=\"@+id/bottom_fragment_menu_navigation_view\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        app:menu=\"@menu/bottom_fragment_menu\" />\r\n\r\n</LinearLayout>\r\n```\r\n\r\n## MenuBottomFragment.kt\r\n\r\n今回はメニューを押したらToastを出すようにしてみました。\r\n\r\n```kotlin\r\nclass MenuBottomFragment : BottomSheetDialogFragment() {\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        return inflater.inflate(R.layout.bottom_fragment_menu, container, false)\r\n    }\r\n\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n        super.onViewCreated(view, savedInstanceState)\r\n        // メニュー押したとき\r\n        bottom_fragment_menu_navigation_view.setNavigationItemSelectedListener {\r\n            Toast.makeText(context, it.title, Toast.LENGTH_SHORT).show()\r\n            true\r\n        }\r\n    }\r\n\r\n}\r\n```\r\n\r\nこれで終わりです。おつ88888888888\r\n\r\nあとは起動してボタンを押すと下からメニューが出てくると思います。\r\n\r\n# ソースコード\r\nhttps://github.com/takusan23/NavigationViewSample\r\n\r\n# おわりに\r\nAndroid Studioくんに背景画像セットしてるせいでスクショが取れなかった。  \r\n次からはPreview版をブログ書く用に入れておきたいと思いましたまる",
  "bodyHtml": "<p>今まで<code>TextView</code>並べてたのがｂｋみたいだわ<br>\nそんなことより7月ですね。</p>\n<h1>本題</h1>\n<p>こういうのを作ります。</p>\n<p><img src=\"https://imgur.com/u1b56Rr.png\" alt=\"Imgur\"></p>\n<h1>環境</h1>\n<table>\n<thead>\n<tr>\n<th>なまえ</th>\n<th>あたい</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Android</td>\n<td>11 Beta 1 (5以降なら動くはずです)</td>\n</tr>\n<tr>\n<td>言語</td>\n<td>Kotlin</td>\n</tr>\n</tbody>\n</table>\n<h1>マテリアルデザインのライブラリを入れる</h1>\n<p><code>appフォルダ</code>の方にある<code>build.gradle</code>を開きます。<br>\n開いたら、<code>dependencies</code>に追記します。</p>\n<pre><code class=\"hljs\"><span class=\"hljs-keyword\">dependencies</span> {\n    <span class=\"hljs-comment\">// Material Design</span>\n    implementation <span class=\"hljs-string\">'com.google.android.material:material:1.3.0-alpha01'</span>\n    <span class=\"hljs-comment\">// 省略</span>\n}</code></pre><p>あと多分関係ないけど、Java 8を使うようにしておくと今後幸せになれるかもしれない。</p>\n<pre><code class=\"hljs\">android {\n    compileSdkVersion <span class=\"hljs-number\">30</span>\n    buildToolsVersion <span class=\"hljs-string\">\"30.0.0\"</span>\n    <span class=\"hljs-comment\">// 省略</span>\n    compileOptions {\n        <span class=\"hljs-keyword\">sourceCompatibility</span> = <span class=\"hljs-number\">1.8</span>\n        <span class=\"hljs-keyword\">targetCompatibility</span> = <span class=\"hljs-number\">1.8</span>\n    }\n    kotlinOptions {\n        jvmTarget = <span class=\"hljs-string\">\"1.8\"</span>\n    }\n}</code></pre><h1>styles.xml を書き換える</h1>\n<p>これしないと <strong>メニューを押したときの背景</strong> がちゃんと反映されないと思います。<br>\nといっても<code>parent</code>を<code>Theme.MaterialComponents.Light.DarkActionBar</code>に変更するだけです。難しくない</p>\n<pre><code class=\"hljs\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">resources</span>&gt;</span>\n    <span class=\"hljs-comment\">&lt;!-- Base application theme. --&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"AppTheme\"</span> <span class=\"hljs-attr\">parent</span>=<span class=\"hljs-string\">\"Theme.MaterialComponents.Light.DarkActionBar\"</span>&gt;</span><span class=\"xml\">\n        <span class=\"hljs-comment\">&lt;!-- Customize your theme here. --&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">item</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"colorPrimary\"</span>&gt;</span>@color/colorPrimary<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">item</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">item</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"colorPrimaryDark\"</span>&gt;</span>@color/colorPrimaryDark<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">item</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">item</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"colorAccent\"</span>&gt;</span>@color/colorAccent<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">item</span>&gt;</span>\n    </span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">resources</span>&gt;</span></code></pre><h1>メニュー作成</h1>\n<h2>menuフォルダの中にファイルを置く</h2>\n<p><code>res</code>の中に<code>menu</code>フォルダを作ります。<br>\nできたら、<code>bottom_fragment_menu.xml</code>ファイルを置きます。</p>\n<h2>アイコンを取ってくる</h2>\n<p>Android Studio 4.0 からアイコンを選ぶ際に、Outlinedなアイコンが選択可能になりました。たすかる<br>\n<code>Vector Asset</code>を開いて、好きなアイコンを取ってきてください。<br>\n起動方法は、<code>Shiftキーを3連続</code>押して<code>Vector Asset</code>って入力すれば多分出ると思います。<code>macOSのSpotlight的ななにか（macOS触ったこと無いけど）</code></p>\n<p><img src=\"https://imgur.com/EIxL4JP.png\" alt=\"Imgur\"></p>\n<h2>bottom_fragment_menu.xml を書く</h2>\n<p>以下のように。</p>\n<pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">menu</span> <span class=\"hljs-attr\">xmlns:android</span>=<span class=\"hljs-string\">\"http://schemas.android.com/apk/res/android\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">group</span> <span class=\"hljs-attr\">android:checkableBehavior</span>=<span class=\"hljs-string\">\"single\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">item</span>\n            <span class=\"hljs-attr\">android:id</span>=<span class=\"hljs-string\">\"@+id/nav_menu_java\"</span>\n            <span class=\"hljs-attr\">android:icon</span>=<span class=\"hljs-string\">\"@drawable/ic_outline_settings_24\"</span>\n            <span class=\"hljs-attr\">android:title</span>=<span class=\"hljs-string\">\"Java\"</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">item</span>\n            <span class=\"hljs-attr\">android:id</span>=<span class=\"hljs-string\">\"@+id/nav_menu_kotlin\"</span>\n            <span class=\"hljs-attr\">android:icon</span>=<span class=\"hljs-string\">\"@drawable/ic_outline_settings_24\"</span>\n            <span class=\"hljs-attr\">android:title</span>=<span class=\"hljs-string\">\"Kotlin\"</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">item</span>\n            <span class=\"hljs-attr\">android:id</span>=<span class=\"hljs-string\">\"@+id/nav_menu_js\"</span>\n            <span class=\"hljs-attr\">android:icon</span>=<span class=\"hljs-string\">\"@drawable/ic_outline_settings_24\"</span>\n            <span class=\"hljs-attr\">android:title</span>=<span class=\"hljs-string\">\"JS\"</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">group</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">menu</span>&gt;</span></code></pre><h1>MainActivity</h1>\n<h2>activity_main.xml</h2>\n<p>レイアウトを書き換えます。ボタン一個置くだけなので<code>ConstraintLayout</code>をそのまま使おうと思います。<br>\nいつかはちゃんと<code>ConstraintLayout</code>できるようにして<strong>MotionLayoutの初め方</strong>みたいな記事を書きたい。<br>\nちなみに現状<code>MotionLayout</code>使うと<code>RecyclerView</code>のクリックが行かない（たまによくクリックが反応しなくなる）のでもう少し様子見したほうが良い。</p>\n<pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">androidx.constraintlayout.widget.ConstraintLayout</span> <span class=\"hljs-attr\">xmlns:android</span>=<span class=\"hljs-string\">\"http://schemas.android.com/apk/res/android\"</span>\n    <span class=\"hljs-attr\">xmlns:app</span>=<span class=\"hljs-string\">\"http://schemas.android.com/apk/res-auto\"</span>\n    <span class=\"hljs-attr\">xmlns:tools</span>=<span class=\"hljs-string\">\"http://schemas.android.com/tools\"</span>\n    <span class=\"hljs-attr\">android:layout_width</span>=<span class=\"hljs-string\">\"match_parent\"</span>\n    <span class=\"hljs-attr\">android:layout_height</span>=<span class=\"hljs-string\">\"match_parent\"</span>\n    <span class=\"hljs-attr\">tools:context</span>=<span class=\"hljs-string\">\".MainActivity\"</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span>\n        <span class=\"hljs-attr\">android:id</span>=<span class=\"hljs-string\">\"@+id/activity_main_bottom_menu\"</span>\n        <span class=\"hljs-attr\">android:layout_width</span>=<span class=\"hljs-string\">\"wrap_content\"</span>\n        <span class=\"hljs-attr\">android:layout_height</span>=<span class=\"hljs-string\">\"wrap_content\"</span>\n        <span class=\"hljs-attr\">android:text</span>=<span class=\"hljs-string\">\"BottomMenu\"</span>\n        <span class=\"hljs-attr\">app:layout_constraintBottom_toBottomOf</span>=<span class=\"hljs-string\">\"parent\"</span>\n        <span class=\"hljs-attr\">app:layout_constraintLeft_toLeftOf</span>=<span class=\"hljs-string\">\"parent\"</span>\n        <span class=\"hljs-attr\">app:layout_constraintRight_toRightOf</span>=<span class=\"hljs-string\">\"parent\"</span>\n        <span class=\"hljs-attr\">app:layout_constraintTop_toTopOf</span>=<span class=\"hljs-string\">\"parent\"</span> /&gt;</span>\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></code></pre><h2>MainActivity.kt</h2>\n<p>メニューを開くコードを書きます。</p>\n<pre><code class=\"hljs\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MainActivity</span> : <span class=\"hljs-type\">AppCompatActivity</span></span>() {\n    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">onCreate</span><span class=\"hljs-params\">(savedInstanceState: <span class=\"hljs-type\">Bundle</span>?)</span></span> {\n        <span class=\"hljs-keyword\">super</span>.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n        <span class=\"hljs-comment\">// BottomFragment開く</span>\n        activity_main_bottom_menu.setOnClickListener {\n            MenuBottomFragment().show(supportFragmentManager, <span class=\"hljs-string\">\"menu\"</span>)\n        }\n    }\n}</code></pre><p><code>MenuBottomFragment</code>が赤くなるのでこれから書いていきましょう。</p>\n<h1>MenuBottomFragment.kt</h1>\n<p>を作成します。<br>\nよくわからん人は<code>MainActivity.kt</code>のある場所に<code>MenuBottomFragment.kt</code>を作ればいいです。</p>\n<h2>bottom_fragment_menu.xml</h2>\n<p><code>res/layout</code>の中に<code>bottom_fragment_menu.xml</code>を作成してください。<br>\n中身はこんな感じで</p>\n<pre><code class=\"hljs\"><span class=\"hljs-meta\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">LinearLayout</span> <span class=\"hljs-attr\">xmlns:android</span>=<span class=\"hljs-string\">\"http://schemas.android.com/apk/res/android\"</span>\n    <span class=\"hljs-attr\">xmlns:app</span>=<span class=\"hljs-string\">\"http://schemas.android.com/apk/res-auto\"</span>\n    <span class=\"hljs-attr\">android:layout_width</span>=<span class=\"hljs-string\">\"match_parent\"</span>\n    <span class=\"hljs-attr\">android:layout_height</span>=<span class=\"hljs-string\">\"match_parent\"</span>\n    <span class=\"hljs-attr\">android:orientation</span>=<span class=\"hljs-string\">\"vertical\"</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">com.google.android.material.navigation.NavigationView</span>\n        <span class=\"hljs-attr\">android:id</span>=<span class=\"hljs-string\">\"@+id/bottom_fragment_menu_navigation_view\"</span>\n        <span class=\"hljs-attr\">android:layout_width</span>=<span class=\"hljs-string\">\"match_parent\"</span>\n        <span class=\"hljs-attr\">android:layout_height</span>=<span class=\"hljs-string\">\"match_parent\"</span>\n        <span class=\"hljs-attr\">app:menu</span>=<span class=\"hljs-string\">\"@menu/bottom_fragment_menu\"</span> /&gt;</span>\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">LinearLayout</span>&gt;</span></code></pre><h2>MenuBottomFragment.kt</h2>\n<p>今回はメニューを押したらToastを出すようにしてみました。</p>\n<pre><code class=\"hljs\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MenuBottomFragment</span> : <span class=\"hljs-type\">BottomSheetDialogFragment</span></span>() {\n\n    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">onCreateView</span><span class=\"hljs-params\">(\n        inflater: <span class=\"hljs-type\">LayoutInflater</span>,\n        container: <span class=\"hljs-type\">ViewGroup</span>?,\n        savedInstanceState: <span class=\"hljs-type\">Bundle</span>?\n    )</span></span>: View? {\n        <span class=\"hljs-keyword\">return</span> inflater.inflate(R.layout.bottom_fragment_menu, container, <span class=\"hljs-literal\">false</span>)\n    }\n\n    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">onViewCreated</span><span class=\"hljs-params\">(view: <span class=\"hljs-type\">View</span>, savedInstanceState: <span class=\"hljs-type\">Bundle</span>?)</span></span> {\n        <span class=\"hljs-keyword\">super</span>.onViewCreated(view, savedInstanceState)\n        <span class=\"hljs-comment\">// メニュー押したとき</span>\n        bottom_fragment_menu_navigation_view.setNavigationItemSelectedListener {\n            Toast.makeText(context, it.title, Toast.LENGTH_SHORT).show()\n            <span class=\"hljs-literal\">true</span>\n        }\n    }\n\n}</code></pre><p>これで終わりです。おつ88888888888</p>\n<p>あとは起動してボタンを押すと下からメニューが出てくると思います。</p>\n<h1>ソースコード</h1>\n<p><a href=\"https://github.com/takusan23/NavigationViewSample\">https://github.com/takusan23/NavigationViewSample</a></p>\n<h1>おわりに</h1>\n<p>Android Studioくんに背景画像セットしてるせいでスクショが取れなかった。<br>\n次からはPreview版をブログ書く用に入れておきたいと思いましたまる</p>\n",
  "dir": "contents/posts/json",
  "base": "android_navigation_view.json",
  "ext": ".json",
  "sourceBase": "android_navigation_view.md",
  "sourceExt": ".md"
}