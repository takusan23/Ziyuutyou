{
  "title": "これ作るのに大変だったこと",
  "created_at": "2020-06-02T00:00:00.000Z",
  "tags": [
    "その他",
    "自作ブログ"
  ],
  "bodyContent": "Hexoってすごいんだなって。  \r\nなお完成はいつになるかわかりません。いつ出来上がるんだこれ？  \r\n完成までに思ったことを書いていくと思う。\r\n\r\n## これ作るのに大変だったこと\r\n書く。\r\n\r\n### Vuetifyが`<code>`に色つける。\r\n\r\nVuetifyくんが勝手に色を付けてくれます。が、なんかいまいちなので頑張ってCSS書いて直したいんですが、  \r\nVuetifyくんが許してくれません。？  \r\nしかたないので`!important`で黙らせました。    \r\n\r\nassets/css/styles.css\r\n```css\r\n/* VuetifyのせいでCodeタグに勝手にCSS適用されるので強制上書き */\r\n\r\n.v-application code {\r\n    box-shadow: initial !important;\r\n    border: 1px solid gray;\r\n    border-radius: 5px !important;\r\n    font-family: 'Koruri Regular';\r\n    margin: 10px;\r\n}\r\n\r\n.v-application code, .v-application kbd {\r\n    font-weight: initial !important;\r\n}\r\n```\r\n\r\nついでに`highlight.js`のCSS、`vs2015.css`を入れてコードにシンタックスハイライトをつけようとしたんですけど、これもうまく動かなかったので`vs2015.css`に`!important`付けて対応しました。\r\n\r\n### CSS\r\nCSSよくわがんね。\r\n\r\n```css\r\n/* ほばー */\r\n.titleHover:hover {\r\n    color: #5870cb;\r\n    transition: color 0.5s;\r\n}\r\n```\r\n\r\nこれは記事一覧のタイトルをマウスオーバーするとジワーッと色が変わるCSSです。  \r\n\r\n### Processmdくんが時系列順に並べてくれない\r\n\r\nこれはおま環境かもしれないけど、時系列順に並んでくれません。  \r\n流石に時系列順にならないのはきついので、JavaScriptで時系列に並び替えるコードを書きました。sort関数あったし。\r\n\r\n```js\r\n// なんかしらんけど並び順が新しい順とは限らないらしい？\r\nconst sortedKeyList = Object.keys(fileMap);\r\nsortedKeyList.sort(function(a, b) {\r\n  const aDate = new Date(fileMap[a].created_at).getTime();\r\n  const bDate = new Date(fileMap[b].created_at).getTime();\r\n  if (aDate > bDate) return -1;\r\n  if (aDate < bDate) return 1;\r\n  return 0;\r\n});\r\n```\r\n\r\nKotlinの`sortBy{}`とは使い方が違っててちょっと迷った。\r\n\r\nあとprocessmdくん、/posts/jsonに消した記事が残ってるんですがそれは、、\r\n\r\n### ページネーション\r\n\r\n次のページ、前のページを付けることを、ページネーションって言うそうですよ。  \r\nこれ付けないと記事が増えたときのスクロールがとんでもないことになる。  \r\n\r\n記事一覧はこんな感じに静的に出してほしいので（postsに置くとタイトル被りそうなのでpageフォルダがある。）\r\n```js\r\n/posts/page/1\r\n```\r\n\r\n特に需要はなさそうですが一応必要なページ数に合わせて`posts/page`の配列を返す関数置いときますね。\r\n\r\n```js\r\n/** 次のページ機能をつける。そうしないと記事一覧にどばーってなってスクロール大変になる */\r\nconst generatePagenationRoutesList = () => {\r\n  // 何ページ必要か計算する（10で割ればいいっしょ）。ただ1ページ目は最低限必要なので1足す\r\n  const calc = Math.floor(postsJSON.sourceFileArray.length / PAGE_LIMIT) + 1\r\n  // ページ分だけ動的ルーティングの配列出す？\r\n  const dynamicRouterPathList = []\r\n  // console.log(`ページ数：${calc} / 記事数：${postsJSON.sourceFileArray.length}`)\r\n  // ページ生成。1ページ目から作るので1からスタート\r\n  for (let i = 1; i <= calc; i++) {\r\n    dynamicRouterPathList.push(`/posts/page/${i}`)\r\n  }\r\n  return dynamicRouterPathList\r\n}\r\n\r\n// 省略\r\n\r\n/** 静的サイトジェネレート関数。配列(pages/とposts/)くっつける */\r\nconst generateRoutes = callback => {\r\n  callback(null, [generatePagenationRoutesList()].flat())\r\n}\r\n\r\n```\r\n\r\nこれ動かすには`postsフォルダ`に`pageフォルダ`を作って中に、`_id.vue`を置いておく必要があります。\r\n\r\nこれで`posts/page/1`などが生成されるようになります（多分）\r\n\r\n~~この記事書いてる途中でなんでこれ動いてんのかよくわからなくなったのは内緒~~←やっぱり生成できてなかったので直しました。（2020/06/03）\r\n\r\n### `<v-card>`が遅い？\r\n何故か知りませんが、VuetiryのCardコンポーネントがおそい。というかページ遷移がこいつのせいで遅くなる。  \r\n\r\nせっかくの静的サイトで遅いのは辛いので直したい。（しかも記事一覧に戻った時にワンテンポ遅れるとか見てられない）\r\n\r\nで、なぜか`<v-card>`を`<v-sheet>`に置き換えることで解決しました。  \r\n\r\nなんで？\r\n\r\n### 記事一覧を再読み込みした後記事を開くと404\r\n\r\nなんかしらんけどF5するとURLの後ろに`/`が入ります。  \r\n最後に`/`が入っていないのが前提で作っているので、最後に入ると **`../`(一個前に戻る)** がおかしな場所を指すようになります。\r\n\r\nというかこれは私の作り方（ファイル構成）が悪いですね、なんで戻ったりしないといけないんだ。\r\n\r\n- pages\r\n  - pages（固定ページ。今回は省略）\r\n  - posts（ブログ）\r\n    - page\r\n      - _id.vue（記事一覧）\r\n    - tag\r\n      - _id.vue（タグ検索結果）\r\n    - index.vue（本来ここに記事一覧が有るべき？）\r\n    - _slug.vue（記事。ここに居るので一覧から来たら戻らないといけない。）\r\n\r\n\r\n今回は`nuxt.config.js`を開き、URLの最後に`/`を入れる設定を付けました。おかげて修正が必要になりましたが。\r\n\r\n```js\r\nexport.default {\r\n  // 省略\r\n  router: {\r\n    base: '/Ziyuutyou/',\r\n    trailingSlash: true // ←これ\r\n  }\r\n}\r\n```\r\n\r\n\r\n## 特に大変じゃなかったこと\r\n\r\n### PWA\r\n\r\nPWAってめんどいんですよ。アイコン画像を用意するのがね！！！。  \r\n192x192だったり512x512だったりいっぱい要求してくるんですけど、  \r\n`@nuxt/pwa`は指定がない場合、`static/icon.png`を使ってくれるので、512x512のpngを置いておくだけで終わりました。PWA RTA行けそう（は？）  \r\n\r\n一応`nuxt.config.js`の`manifest`置いておきますね。\r\n\r\n```js\r\n/** \r\n * PWA manifest.json\r\n */\r\nmanifest: {\r\n  name: 'たくさんの自由帳',\r\n  title: 'たくさんの自由帳',\r\n  'og:title': 'たくさんの自由帳',\r\n  lang: 'ja',\r\n  theme_color: '#8c9eff',\r\n  background_color: '#5870cb',\r\n  display: 'standalone',\r\n}\r\n```\r\n\r\n### ダークモード\r\n\r\nVuetifyなら  \r\n```js\r\n$vuetify.theme.dark = true\r\n```  \r\nで終わります。Vuetifyすげー\r\n\r\nダークモード切り替えスイッチの例置いときますね。\r\n\r\n```js\r\n<!-- ダークモードスイッチ -->\r\n<v-switch\r\n  class=\"text-center ma-2\"\r\n  :append-icon=\"`${$vuetify.theme.dark ? 'mdi-weather-night' : 'mdi-weather-sunny'}`\"\r\n  v-model=\"$vuetify.theme.dark\"\r\n  label=\"テーマ切り替え\"\r\n></v-switch>\r\n```\r\n\r\n三項演算子使うの初めてかもしれない（まずKotlinにはないし）  \r\n\r\nところで$←これなに？\r\n\r\n## おわりに\r\n学校始まるわ。早起きつっら  \r\nあと画像貼る方法確立してない。imgur使うか？",
  "bodyHtml": "<p>Hexoってすごいんだなって。<br>\nなお完成はいつになるかわかりません。いつ出来上がるんだこれ？<br>\n完成までに思ったことを書いていくと思う。</p>\n<h2>これ作るのに大変だったこと</h2>\n<p>書く。</p>\n<h3>Vuetifyが<code>&lt;code&gt;</code>に色つける。</h3>\n<p>Vuetifyくんが勝手に色を付けてくれます。が、なんかいまいちなので頑張ってCSS書いて直したいんですが、<br>\nVuetifyくんが許してくれません。？<br>\nしかたないので<code>!important</code>で黙らせました。</p>\n<p>assets/css/styles.css</p>\n<pre><code class=\"hljs\"><span class=\"hljs-comment\">/* VuetifyのせいでCodeタグに勝手にCSS適用されるので強制上書き */</span>\n\n<span class=\"hljs-selector-class\">.v-application</span> <span class=\"hljs-selector-tag\">code</span> {\n    <span class=\"hljs-attribute\">box-shadow</span>: initial <span class=\"hljs-meta\">!important</span>;\n    <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">1px</span> solid gray;\n    <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-number\">5px</span> <span class=\"hljs-meta\">!important</span>;\n    <span class=\"hljs-attribute\">font-family</span>: <span class=\"hljs-string\">'Koruri Regular'</span>;\n    <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">10px</span>;\n}\n\n<span class=\"hljs-selector-class\">.v-application</span> <span class=\"hljs-selector-tag\">code</span>, <span class=\"hljs-selector-class\">.v-application</span> <span class=\"hljs-selector-tag\">kbd</span> {\n    <span class=\"hljs-attribute\">font-weight</span>: initial <span class=\"hljs-meta\">!important</span>;\n}</code></pre><p>ついでに<code>highlight.js</code>のCSS、<code>vs2015.css</code>を入れてコードにシンタックスハイライトをつけようとしたんですけど、これもうまく動かなかったので<code>vs2015.css</code>に<code>!important</code>付けて対応しました。</p>\n<h3>CSS</h3>\n<p>CSSよくわがんね。</p>\n<pre><code class=\"hljs\"><span class=\"hljs-comment\">/* ほばー */</span>\n<span class=\"hljs-selector-class\">.titleHover</span><span class=\"hljs-selector-pseudo\">:hover</span> {\n    <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#5870cb</span>;\n    <span class=\"hljs-attribute\">transition</span>: color <span class=\"hljs-number\">0.5s</span>;\n}</code></pre><p>これは記事一覧のタイトルをマウスオーバーするとジワーッと色が変わるCSSです。</p>\n<h3>Processmdくんが時系列順に並べてくれない</h3>\n<p>これはおま環境かもしれないけど、時系列順に並んでくれません。<br>\n流石に時系列順にならないのはきついので、JavaScriptで時系列に並び替えるコードを書きました。sort関数あったし。</p>\n<pre><code class=\"hljs\"><span class=\"hljs-comment\">// なんかしらんけど並び順が新しい順とは限らないらしい？</span>\n<span class=\"hljs-keyword\">const</span> sortedKeyList = <span class=\"hljs-built_in\">Object</span>.keys(fileMap);\nsortedKeyList.sort(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, b</span>) </span>{\n  <span class=\"hljs-keyword\">const</span> aDate = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(fileMap[a].created_at).getTime();\n  <span class=\"hljs-keyword\">const</span> bDate = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(fileMap[b].created_at).getTime();\n  <span class=\"hljs-keyword\">if</span> (aDate &gt; bDate) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>;\n  <span class=\"hljs-keyword\">if</span> (aDate &lt; bDate) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n});</code></pre><p>Kotlinの<code>sortBy{}</code>とは使い方が違っててちょっと迷った。</p>\n<p>あとprocessmdくん、/posts/jsonに消した記事が残ってるんですがそれは、、</p>\n<h3>ページネーション</h3>\n<p>次のページ、前のページを付けることを、ページネーションって言うそうですよ。<br>\nこれ付けないと記事が増えたときのスクロールがとんでもないことになる。</p>\n<p>記事一覧はこんな感じに静的に出してほしいので（postsに置くとタイトル被りそうなのでpageフォルダがある。）</p>\n<pre><code class=\"hljs\">/posts/page/1</code></pre><p>特に需要はなさそうですが一応必要なページ数に合わせて<code>posts/page</code>の配列を返す関数置いときますね。</p>\n<pre><code class=\"hljs\"><span class=\"hljs-comment\">/** 次のページ機能をつける。そうしないと記事一覧にどばーってなってスクロール大変になる */</span>\n<span class=\"hljs-keyword\">const</span> generatePagenationRoutesList = <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\n  <span class=\"hljs-comment\">// 何ページ必要か計算する（10で割ればいいっしょ）。ただ1ページ目は最低限必要なので1足す</span>\n  <span class=\"hljs-keyword\">const</span> calc = <span class=\"hljs-built_in\">Math</span>.floor(postsJSON.sourceFileArray.length / PAGE_LIMIT) + <span class=\"hljs-number\">1</span>\n  <span class=\"hljs-comment\">// ページ分だけ動的ルーティングの配列出す？</span>\n  <span class=\"hljs-keyword\">const</span> dynamicRouterPathList = []\n  <span class=\"hljs-comment\">// console.log(`ページ数：${calc} / 記事数：${postsJSON.sourceFileArray.length}`)</span>\n  <span class=\"hljs-comment\">// ページ生成。1ページ目から作るので1からスタート</span>\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">1</span>; i &lt;= calc; i++) {\n    dynamicRouterPathList.push(<span class=\"hljs-string\">`/posts/page/<span class=\"hljs-subst\">${i}</span>`</span>)\n  }\n  <span class=\"hljs-keyword\">return</span> dynamicRouterPathList\n}\n\n<span class=\"hljs-comment\">// 省略</span>\n\n<span class=\"hljs-comment\">/** 静的サイトジェネレート関数。配列(pages/とposts/)くっつける */</span>\n<span class=\"hljs-keyword\">const</span> generateRoutes = <span class=\"hljs-function\"><span class=\"hljs-params\">callback</span> =&gt;</span> {\n  callback(<span class=\"hljs-literal\">null</span>, [generatePagenationRoutesList()].flat())\n}</code></pre><p>これ動かすには<code>postsフォルダ</code>に<code>pageフォルダ</code>を作って中に、<code>_id.vue</code>を置いておく必要があります。</p>\n<p>これで<code>posts/page/1</code>などが生成されるようになります（多分）</p>\n<p><s>この記事書いてる途中でなんでこれ動いてんのかよくわからなくなったのは内緒</s>←やっぱり生成できてなかったので直しました。（2020/06/03）</p>\n<h3><code>&lt;v-card&gt;</code>が遅い？</h3>\n<p>何故か知りませんが、VuetiryのCardコンポーネントがおそい。というかページ遷移がこいつのせいで遅くなる。</p>\n<p>せっかくの静的サイトで遅いのは辛いので直したい。（しかも記事一覧に戻った時にワンテンポ遅れるとか見てられない）</p>\n<p>で、なぜか<code>&lt;v-card&gt;</code>を<code>&lt;v-sheet&gt;</code>に置き換えることで解決しました。</p>\n<p>なんで？</p>\n<h3>記事一覧を再読み込みした後記事を開くと404</h3>\n<p>なんかしらんけどF5するとURLの後ろに<code>/</code>が入ります。<br>\n最後に<code>/</code>が入っていないのが前提で作っているので、最後に入ると <strong><code>../</code>(一個前に戻る)</strong> がおかしな場所を指すようになります。</p>\n<p>というかこれは私の作り方（ファイル構成）が悪いですね、なんで戻ったりしないといけないんだ。</p>\n<ul>\n<li>pages\n<ul>\n<li>pages（固定ページ。今回は省略）</li>\n<li>posts（ブログ）\n<ul>\n<li>page\n<ul>\n<li>_id.vue（記事一覧）</li>\n</ul>\n</li>\n<li>tag\n<ul>\n<li>_id.vue（タグ検索結果）</li>\n</ul>\n</li>\n<li>index.vue（本来ここに記事一覧が有るべき？）</li>\n<li>_slug.vue（記事。ここに居るので一覧から来たら戻らないといけない。）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>今回は<code>nuxt.config.js</code>を開き、URLの最後に<code>/</code>を入れる設定を付けました。おかげて修正が必要になりましたが。</p>\n<pre><code class=\"hljs\"><span class=\"hljs-keyword\">export</span>.default {\n  <span class=\"hljs-comment\">// 省略</span>\n  <span class=\"hljs-attr\">router</span>: {\n    <span class=\"hljs-attr\">base</span>: <span class=\"hljs-string\">'/Ziyuutyou/'</span>,\n    <span class=\"hljs-attr\">trailingSlash</span>: <span class=\"hljs-literal\">true</span> <span class=\"hljs-comment\">// ←これ</span>\n  }\n}</code></pre><h2>特に大変じゃなかったこと</h2>\n<h3>PWA</h3>\n<p>PWAってめんどいんですよ。アイコン画像を用意するのがね！！！。<br>\n192x192だったり512x512だったりいっぱい要求してくるんですけど、<br>\n<code>@nuxt/pwa</code>は指定がない場合、<code>static/icon.png</code>を使ってくれるので、512x512のpngを置いておくだけで終わりました。PWA RTA行けそう（は？）</p>\n<p>一応<code>nuxt.config.js</code>の<code>manifest</code>置いておきますね。</p>\n<pre><code class=\"hljs\"><span class=\"hljs-comment\">/** \n * PWA manifest.json\n */</span>\n<span class=\"hljs-attr\">manifest</span>: {\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'たくさんの自由帳'</span>,\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">'たくさんの自由帳'</span>,\n  <span class=\"hljs-string\">'og:title'</span>: <span class=\"hljs-string\">'たくさんの自由帳'</span>,\n  <span class=\"hljs-attr\">lang</span>: <span class=\"hljs-string\">'ja'</span>,\n  <span class=\"hljs-attr\">theme_color</span>: <span class=\"hljs-string\">'#8c9eff'</span>,\n  <span class=\"hljs-attr\">background_color</span>: <span class=\"hljs-string\">'#5870cb'</span>,\n  <span class=\"hljs-attr\">display</span>: <span class=\"hljs-string\">'standalone'</span>,\n}</code></pre><h3>ダークモード</h3>\n<p>Vuetifyなら</p>\n<pre><code class=\"hljs\">$vuetify.theme.dark = <span class=\"hljs-literal\">true</span></code></pre><p>で終わります。Vuetifyすげー</p>\n<p>ダークモード切り替えスイッチの例置いときますね。</p>\n<pre><code class=\"hljs\">&lt;!-- ダークモードスイッチ --&gt;\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">v-switch</span>\n  <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"text-center ma-2\"</span>\n  <span class=\"hljs-attr\">:append-icon</span>=<span class=\"hljs-string\">\"`${$vuetify.theme.dark ? 'mdi-weather-night' : 'mdi-weather-sunny'}`\"</span>\n  <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"$vuetify.theme.dark\"</span>\n  <span class=\"hljs-attr\">label</span>=<span class=\"hljs-string\">\"テーマ切り替え\"</span>\n&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">v-switch</span>&gt;</span></span></code></pre><p>三項演算子使うの初めてかもしれない（まずKotlinにはないし）</p>\n<p>ところで$←これなに？</p>\n<h2>おわりに</h2>\n<p>学校始まるわ。早起きつっら<br>\nあと画像貼る方法確立してない。imgur使うか？</p>\n",
  "dir": "contents/posts/json",
  "base": "taihendattakoto.json",
  "ext": ".json",
  "sourceBase": "taihendattakoto.md",
  "sourceExt": ".md"
}