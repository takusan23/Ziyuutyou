{
  "title": "ExoPlayerとMediaSessionを何となく使う",
  "created_at": "2020-05-10T22:33:50.000Z",
  "tags": [
    "Android",
    "MediaSession",
    "ExoPlayer",
    "Kotlin"
  ],
  "bodyContent": "どうもこんばんわ。  \nなんかいきなり暑くなってあつい。  \n夏は虫（こわい）と頭痛が痛くなる（水不足か何か）のと弱冷房車に当たる（マジでいらんだろ。スマホの発熱のほうが熱い）のがあるので嫌いです。\n\n# 本題\nMediaSessionってのがあるんですよ。JavaScriptの方じゃないです。（JavaScriptの方はこれ↓）\n\n{% asset_img js.png js %}\n\nAndroidのMediaSessionもJSのMediaSessionと多分同じ感じで、\n- **GoogleAssistantに今再生してる曲なに？**って聞くと答えが帰ってきたり\n- Always On Display に曲名を表示したり\n- などなど  \n\nGoogleAssistantで操作できるのもこれ。別にBroadcastReceiverとかで受け取ってるとかではない。\n\nちなみに音楽プレーヤーの通知にあるあの操作パネルは別にMediaSession無しでも作れる。\n\n## ここまでExoPlayer要素なし\nMediaSessionってなんかネット上にも情報がなくてよくわからないんですが、  \nExoPlayerとうまく連携してくれるライブラリがあるので今回はそのライブラリに頼ってMediaSessionを作っていこうと思います。\n\n# 作る\n## 環境\n| なまえ    | あたい  |\n|-----------|---------|\n| Android   | 11 DP 4 |\n| 言語      | Kotlin  |\n| ExoPlayer | 2.11.3  |\n\n## 再生する曲\n今回は適当にフリー音源を使います。今回は甘茶の音楽工房様のファミポップⅢを使わせてもらいます。  \n別にExoPlayerで再生できれば何でもいいです。\n\n## ライブラリ入れるなど\n\n```gradle\ndependencies {\n    // MediaSession\n    implementation \"androidx.media:media:1.1.0\"\n    // ExoPlayer\n    implementation 'com.google.android.exoplayer:exoplayer-core:2.11.3'\n    implementation 'com.google.android.exoplayer:extension-mediasession:2.10.4'\n    // 省略\n}\n```\n\n## 音楽入れる\n本当は端末内の音楽を再生するのがいいんでしょうけど、Androidのファイル読み書きがややこしいので今回はres/rawに入れて再生することにします。  \nExoPlayerが対応してる再生方法なら何でもいいと思います。\n\n# 仕様など\nめんどいのでServiceではなくActivityで作ります。（普通の音楽アプリならServiceで作る。）  \n音楽は前述通りres/rawから読み込む形で。\n\n# MainActivity.kt\n## ExoPlayer再生するまで\nExoPlayerってバージョン上がると一気に非推奨になったりして追いかけるの大変。\n```kotlin\nclass MainActivity : AppCompatActivity() {\n\n    // ファイル名\n    val FILE_NAME = \"famipop3\"\n\n    lateinit var exoPlayer: SimpleExoPlayer\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        // ExoPlayerで再生するまで\n        exoPlayer = SimpleExoPlayer.Builder(this).build()\n        val dataSourceFactory = DefaultDataSourceFactory(this, \"@takusan_23\")\n        val uri = RawResourceDataSource.buildRawResourceUri(R.raw.famipop3)\n        val source = ProgressiveMediaSource.Factory(dataSourceFactory).createMediaSource(uri)\n        exoPlayer.prepare(source)\n\n        // 再生\n        play_button.setOnClickListener {\n            exoPlayer.playWhenReady = !exoPlayer.playWhenReady\n        }\n    }\n\n    override fun onDestroy() {\n        super.onDestroy()\n        exoPlayer.release()\n    }\n\n}\n```\n\nファイル名のところは各自書き換えてね。\n\n## MediaSession連携\nめんどいので全部張ります\n```kotlin\nclass MainActivity : AppCompatActivity() {\n    \n    lateinit var exoPlayer: SimpleExoPlayer\n\n    // MediaSession\n    lateinit var mediaSession: MediaSessionCompat\n    lateinit var mediaSessionConnector: MediaSessionConnector\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        // ExoPlayerで再生するまで\n        exoPlayer = SimpleExoPlayer.Builder(this).build()\n        val dataSourceFactory = DefaultDataSourceFactory(this, \"@takusan_23\")\n        val uri = RawResourceDataSource.buildRawResourceUri(R.raw.famipop3)\n        val source = ProgressiveMediaSource.Factory(dataSourceFactory).createMediaSource(uri)\n        exoPlayer.prepare(source)\n\n        // mp3から再生時間だけ取る。\n        val mediaMetadataRetriever = MediaMetadataRetriever()\n        val afd = resources.openRawResourceFd(R.raw.famipop3)\n        mediaMetadataRetriever.setDataSource(afd.fileDescriptor, afd.startOffset, afd.length)\n        val duration = mediaMetadataRetriever.extractMetadata(MediaMetadataRetriever.METADATA_KEY_DURATION).toLong()\n\n        // MediaSession連携\n        mediaSession = MediaSessionCompat(this, \"sample\").apply {\n            isActive = true\n        }\n        mediaSessionConnector = MediaSessionConnector(mediaSession)\n        mediaSessionConnector.setPlayer(exoPlayer)\n        // メタデータ\n        mediaSessionConnector.setMediaMetadataProvider {\n            // メタデータ\n            val mediaMetadataCompat = MediaMetadataCompat.Builder().apply {\n                putString(MediaMetadataCompat.METADATA_KEY_TITLE, \"ファミポップⅢ\")\n                putString(MediaMetadataCompat.METADATA_KEY_MEDIA_ID, \"famipop\")\n                putString(MediaMetadataCompat.METADATA_KEY_DISPLAY_TITLE, \"ファミポップⅢ\")\n                putString(MediaMetadataCompat.METADATA_KEY_DISPLAY_SUBTITLE, \"甘茶の音楽工房\")\n                putString(MediaMetadataCompat.METADATA_KEY_ARTIST, \"甘茶の音楽工房\")\n                putLong(MediaMetadataCompat.METADATA_KEY_DURATION, duration) // これあるとAndroid 10でシーク使えます\n            }.build()\n            mediaMetadataCompat\n        }\n\n        // 再生\n        play_button.setOnClickListener {\n            exoPlayer.playWhenReady = !exoPlayer.playWhenReady\n            showNotification()\n        }\n\n    }\n\n    @RequiresApi(Build.VERSION_CODES.O)\n    private fun showNotification() {\n        val channelId = \"play_notification\"\n        val notificationManager = getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager\n        if (notificationManager.getNotificationChannel(channelId) == null) {\n            val notificationChannel = NotificationChannel(channelId, \"音楽通知\", NotificationManager.IMPORTANCE_LOW)\n            notificationManager.createNotificationChannel(notificationChannel)\n        }\n        val notification = NotificationCompat.Builder(this, channelId).apply {\n            // MediaStyle。コントローラー\n            setContentTitle(\"ファミポップⅢ\")\n            setContentText(\"甘茶の音楽工房\")\n            setSmallIcon(R.drawable.ic_audiotrack_black_24dp)\n            setStyle(androidx.media.app.NotificationCompat.MediaStyle().setMediaSession(mediaSession.sessionToken))\n            addAction(R.drawable.ic_audiotrack_black_24dp, \"\", PendingIntent.getBroadcast(this@MainActivity, 1, Intent(), PendingIntent.FLAG_UPDATE_CURRENT))\n        }.build()\n        notificationManager.notify(1, notification)\n    }\n\n    override fun onDestroy() {\n        super.onDestroy()\n        // 終了処理\n        exoPlayer.release()\n        mediaSession.release()\n    }\n\n}\n```\n\n## 注意など\n- 上記のコードは`addAction()`でアイコン出してるけどIntentが空なので押してもなにもなりません。\n- 通知の`setStyle()`に入れる`NotificationCompat`は`androidx.media.app.NotificationCompat`です。`androidx.core.app.NotificationCompat`ではないです（名前同じなのややこC）\n- Android 10から通知の音楽コントローラーにシークバーが追加できるんですが（`MediaMetadataCompat.METADATA_KEY_DURATION`に負の値を指定しなければいい）これ一つ以上`addAction()`を追加しないとシークバーがいつまで経っても表示されません。  \n- `mediaSessionConnector.setMediaMetadataProvider{}`でメタデータを別に作成してますが、多分mp3の中にメタデータがあれば勝手に作ってくれると思います（要検証）\n- メタデータハードコートしてるけど`MediaMetadataRetriever`からタイトルやら作者を取るほうが良いです。（かくのめんどい）\n\n# おわりに\nシークバー出すのに`addAction()`で一個以上アイコンを出さないとだめってことに気付かずに時間が溶けたのでもう疲れた。\n\n{% asset_img assistant.png assistant %}\n\n写真取れなかったけどAlways On Displayでも(Android端末差はあるだろうけど)表示されてます。\n\n# 参考にしました。\nhttps://stackoverflow.com/questions/24030756/mediaextractor-mediametadataretriever-with-raw-asset-file\nhttps://stackoverflow.com/questions/30852975/exoplayer-reading-mp3-file-from-raw-folder",
  "bodyHtml": "<p>どうもこんばんわ。<br>\nなんかいきなり暑くなってあつい。<br>\n夏は虫（こわい）と頭痛が痛くなる（水不足か何か）のと弱冷房車に当たる（マジでいらんだろ。スマホの発熱のほうが熱い）のがあるので嫌いです。</p>\n<h1>本題</h1>\n<p>MediaSessionってのがあるんですよ。JavaScriptの方じゃないです。（JavaScriptの方はこれ↓）</p>\n<p>{% asset_img js.png js %}</p>\n<p>AndroidのMediaSessionもJSのMediaSessionと多分同じ感じで、</p>\n<ul>\n<li>**GoogleAssistantに今再生してる曲なに？**って聞くと答えが帰ってきたり</li>\n<li>Always On Display に曲名を表示したり</li>\n<li>などなど</li>\n</ul>\n<p>GoogleAssistantで操作できるのもこれ。別にBroadcastReceiverとかで受け取ってるとかではない。</p>\n<p>ちなみに音楽プレーヤーの通知にあるあの操作パネルは別にMediaSession無しでも作れる。</p>\n<h2>ここまでExoPlayer要素なし</h2>\n<p>MediaSessionってなんかネット上にも情報がなくてよくわからないんですが、<br>\nExoPlayerとうまく連携してくれるライブラリがあるので今回はそのライブラリに頼ってMediaSessionを作っていこうと思います。</p>\n<h1>作る</h1>\n<h2>環境</h2>\n<table>\n<thead>\n<tr>\n<th>なまえ</th>\n<th>あたい</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Android</td>\n<td>11 DP 4</td>\n</tr>\n<tr>\n<td>言語</td>\n<td>Kotlin</td>\n</tr>\n<tr>\n<td>ExoPlayer</td>\n<td>2.11.3</td>\n</tr>\n</tbody>\n</table>\n<h2>再生する曲</h2>\n<p>今回は適当にフリー音源を使います。今回は甘茶の音楽工房様のファミポップⅢを使わせてもらいます。<br>\n別にExoPlayerで再生できれば何でもいいです。</p>\n<h2>ライブラリ入れるなど</h2>\n<pre><code class=\"hljs\"><span class=\"hljs-keyword\">dependencies</span> {\n    <span class=\"hljs-comment\">// MediaSession</span>\n    implementation <span class=\"hljs-string\">\"androidx.media:media:1.1.0\"</span>\n    <span class=\"hljs-comment\">// ExoPlayer</span>\n    implementation <span class=\"hljs-string\">'com.google.android.exoplayer:exoplayer-core:2.11.3'</span>\n    implementation <span class=\"hljs-string\">'com.google.android.exoplayer:extension-mediasession:2.10.4'</span>\n    <span class=\"hljs-comment\">// 省略</span>\n}</code></pre><h2>音楽入れる</h2>\n<p>本当は端末内の音楽を再生するのがいいんでしょうけど、Androidのファイル読み書きがややこしいので今回はres/rawに入れて再生することにします。<br>\nExoPlayerが対応してる再生方法なら何でもいいと思います。</p>\n<h1>仕様など</h1>\n<p>めんどいのでServiceではなくActivityで作ります。（普通の音楽アプリならServiceで作る。）<br>\n音楽は前述通りres/rawから読み込む形で。</p>\n<h1>MainActivity.kt</h1>\n<h2>ExoPlayer再生するまで</h2>\n<p>ExoPlayerってバージョン上がると一気に非推奨になったりして追いかけるの大変。</p>\n<pre><code class=\"hljs\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MainActivity</span> : <span class=\"hljs-type\">AppCompatActivity</span></span>() {\n\n    <span class=\"hljs-comment\">// ファイル名</span>\n    <span class=\"hljs-keyword\">val</span> FILE_NAME = <span class=\"hljs-string\">\"famipop3\"</span>\n\n    <span class=\"hljs-keyword\">lateinit</span> <span class=\"hljs-keyword\">var</span> exoPlayer: SimpleExoPlayer\n\n    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">onCreate</span><span class=\"hljs-params\">(savedInstanceState: <span class=\"hljs-type\">Bundle</span>?)</span></span> {\n        <span class=\"hljs-keyword\">super</span>.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        <span class=\"hljs-comment\">// ExoPlayerで再生するまで</span>\n        exoPlayer = SimpleExoPlayer.Builder(<span class=\"hljs-keyword\">this</span>).build()\n        <span class=\"hljs-keyword\">val</span> dataSourceFactory = DefaultDataSourceFactory(<span class=\"hljs-keyword\">this</span>, <span class=\"hljs-string\">\"@takusan_23\"</span>)\n        <span class=\"hljs-keyword\">val</span> uri = RawResourceDataSource.buildRawResourceUri(R.raw.famipop3)\n        <span class=\"hljs-keyword\">val</span> source = ProgressiveMediaSource.Factory(dataSourceFactory).createMediaSource(uri)\n        exoPlayer.prepare(source)\n\n        <span class=\"hljs-comment\">// 再生</span>\n        play_button.setOnClickListener {\n            exoPlayer.playWhenReady = !exoPlayer.playWhenReady\n        }\n    }\n\n    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">onDestroy</span><span class=\"hljs-params\">()</span></span> {\n        <span class=\"hljs-keyword\">super</span>.onDestroy()\n        exoPlayer.release()\n    }\n\n}</code></pre><p>ファイル名のところは各自書き換えてね。</p>\n<h2>MediaSession連携</h2>\n<p>めんどいので全部張ります</p>\n<pre><code class=\"hljs\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MainActivity</span> : <span class=\"hljs-type\">AppCompatActivity</span></span>() {\n    \n    <span class=\"hljs-keyword\">lateinit</span> <span class=\"hljs-keyword\">var</span> exoPlayer: SimpleExoPlayer\n\n    <span class=\"hljs-comment\">// MediaSession</span>\n    <span class=\"hljs-keyword\">lateinit</span> <span class=\"hljs-keyword\">var</span> mediaSession: MediaSessionCompat\n    <span class=\"hljs-keyword\">lateinit</span> <span class=\"hljs-keyword\">var</span> mediaSessionConnector: MediaSessionConnector\n\n    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">onCreate</span><span class=\"hljs-params\">(savedInstanceState: <span class=\"hljs-type\">Bundle</span>?)</span></span> {\n        <span class=\"hljs-keyword\">super</span>.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        <span class=\"hljs-comment\">// ExoPlayerで再生するまで</span>\n        exoPlayer = SimpleExoPlayer.Builder(<span class=\"hljs-keyword\">this</span>).build()\n        <span class=\"hljs-keyword\">val</span> dataSourceFactory = DefaultDataSourceFactory(<span class=\"hljs-keyword\">this</span>, <span class=\"hljs-string\">\"@takusan_23\"</span>)\n        <span class=\"hljs-keyword\">val</span> uri = RawResourceDataSource.buildRawResourceUri(R.raw.famipop3)\n        <span class=\"hljs-keyword\">val</span> source = ProgressiveMediaSource.Factory(dataSourceFactory).createMediaSource(uri)\n        exoPlayer.prepare(source)\n\n        <span class=\"hljs-comment\">// mp3から再生時間だけ取る。</span>\n        <span class=\"hljs-keyword\">val</span> mediaMetadataRetriever = MediaMetadataRetriever()\n        <span class=\"hljs-keyword\">val</span> afd = resources.openRawResourceFd(R.raw.famipop3)\n        mediaMetadataRetriever.setDataSource(afd.fileDescriptor, afd.startOffset, afd.length)\n        <span class=\"hljs-keyword\">val</span> duration = mediaMetadataRetriever.extractMetadata(MediaMetadataRetriever.METADATA_KEY_DURATION).toLong()\n\n        <span class=\"hljs-comment\">// MediaSession連携</span>\n        mediaSession = MediaSessionCompat(<span class=\"hljs-keyword\">this</span>, <span class=\"hljs-string\">\"sample\"</span>).apply {\n            isActive = <span class=\"hljs-literal\">true</span>\n        }\n        mediaSessionConnector = MediaSessionConnector(mediaSession)\n        mediaSessionConnector.setPlayer(exoPlayer)\n        <span class=\"hljs-comment\">// メタデータ</span>\n        mediaSessionConnector.setMediaMetadataProvider {\n            <span class=\"hljs-comment\">// メタデータ</span>\n            <span class=\"hljs-keyword\">val</span> mediaMetadataCompat = MediaMetadataCompat.Builder().apply {\n                putString(MediaMetadataCompat.METADATA_KEY_TITLE, <span class=\"hljs-string\">\"ファミポップⅢ\"</span>)\n                putString(MediaMetadataCompat.METADATA_KEY_MEDIA_ID, <span class=\"hljs-string\">\"famipop\"</span>)\n                putString(MediaMetadataCompat.METADATA_KEY_DISPLAY_TITLE, <span class=\"hljs-string\">\"ファミポップⅢ\"</span>)\n                putString(MediaMetadataCompat.METADATA_KEY_DISPLAY_SUBTITLE, <span class=\"hljs-string\">\"甘茶の音楽工房\"</span>)\n                putString(MediaMetadataCompat.METADATA_KEY_ARTIST, <span class=\"hljs-string\">\"甘茶の音楽工房\"</span>)\n                putLong(MediaMetadataCompat.METADATA_KEY_DURATION, duration) <span class=\"hljs-comment\">// これあるとAndroid 10でシーク使えます</span>\n            }.build()\n            mediaMetadataCompat\n        }\n\n        <span class=\"hljs-comment\">// 再生</span>\n        play_button.setOnClickListener {\n            exoPlayer.playWhenReady = !exoPlayer.playWhenReady\n            showNotification()\n        }\n\n    }\n\n    <span class=\"hljs-meta\">@RequiresApi(Build.VERSION_CODES.O)</span>\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">showNotification</span><span class=\"hljs-params\">()</span></span> {\n        <span class=\"hljs-keyword\">val</span> channelId = <span class=\"hljs-string\">\"play_notification\"</span>\n        <span class=\"hljs-keyword\">val</span> notificationManager = getSystemService(Context.NOTIFICATION_SERVICE) <span class=\"hljs-keyword\">as</span> NotificationManager\n        <span class=\"hljs-keyword\">if</span> (notificationManager.getNotificationChannel(channelId) == <span class=\"hljs-literal\">null</span>) {\n            <span class=\"hljs-keyword\">val</span> notificationChannel = NotificationChannel(channelId, <span class=\"hljs-string\">\"音楽通知\"</span>, NotificationManager.IMPORTANCE_LOW)\n            notificationManager.createNotificationChannel(notificationChannel)\n        }\n        <span class=\"hljs-keyword\">val</span> notification = NotificationCompat.Builder(<span class=\"hljs-keyword\">this</span>, channelId).apply {\n            <span class=\"hljs-comment\">// MediaStyle。コントローラー</span>\n            setContentTitle(<span class=\"hljs-string\">\"ファミポップⅢ\"</span>)\n            setContentText(<span class=\"hljs-string\">\"甘茶の音楽工房\"</span>)\n            setSmallIcon(R.drawable.ic_audiotrack_black_24dp)\n            setStyle(androidx.media.app.NotificationCompat.MediaStyle().setMediaSession(mediaSession.sessionToken))\n            addAction(R.drawable.ic_audiotrack_black_24dp, <span class=\"hljs-string\">\"\"</span>, PendingIntent.getBroadcast(<span class=\"hljs-keyword\">this</span><span class=\"hljs-symbol\">@MainActivity</span>, <span class=\"hljs-number\">1</span>, Intent(), PendingIntent.FLAG_UPDATE_CURRENT))\n        }.build()\n        notificationManager.notify(<span class=\"hljs-number\">1</span>, notification)\n    }\n\n    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">onDestroy</span><span class=\"hljs-params\">()</span></span> {\n        <span class=\"hljs-keyword\">super</span>.onDestroy()\n        <span class=\"hljs-comment\">// 終了処理</span>\n        exoPlayer.release()\n        mediaSession.release()\n    }\n\n}</code></pre><h2>注意など</h2>\n<ul>\n<li>上記のコードは<code>addAction()</code>でアイコン出してるけどIntentが空なので押してもなにもなりません。</li>\n<li>通知の<code>setStyle()</code>に入れる<code>NotificationCompat</code>は<code>androidx.media.app.NotificationCompat</code>です。<code>androidx.core.app.NotificationCompat</code>ではないです（名前同じなのややこC）</li>\n<li>Android 10から通知の音楽コントローラーにシークバーが追加できるんですが（<code>MediaMetadataCompat.METADATA_KEY_DURATION</code>に負の値を指定しなければいい）これ一つ以上<code>addAction()</code>を追加しないとシークバーがいつまで経っても表示されません。</li>\n<li><code>mediaSessionConnector.setMediaMetadataProvider{}</code>でメタデータを別に作成してますが、多分mp3の中にメタデータがあれば勝手に作ってくれると思います（要検証）</li>\n<li>メタデータハードコートしてるけど<code>MediaMetadataRetriever</code>からタイトルやら作者を取るほうが良いです。（かくのめんどい）</li>\n</ul>\n<h1>おわりに</h1>\n<p>シークバー出すのに<code>addAction()</code>で一個以上アイコンを出さないとだめってことに気付かずに時間が溶けたのでもう疲れた。</p>\n<p>{% asset_img assistant.png assistant %}</p>\n<p>写真取れなかったけどAlways On Displayでも(Android端末差はあるだろうけど)表示されてます。</p>\n<h1>参考にしました。</h1>\n<p>https://stackoverflow.com/questions/24030756/mediaextractor-mediametadataretriever-with-raw-asset-file\nhttps://stackoverflow.com/questions/30852975/exoplayer-reading-mp3-file-from-raw-folder</p>\n",
  "dir": "contents/posts/json",
  "base": "ExoPlayerとMediaSessionを何となく使う.json",
  "ext": ".json",
  "sourceBase": "ExoPlayerとMediaSessionを何となく使う.md",
  "sourceExt": ".md"
}